Dataset,,,,,Model,Model Desc,Time Taken,Accuracy,Balanced Accuracy,Precision,Recall,F1,CM
cifar10,,,,,DummyClassifier,DummyClassifier(),0.002521276,0.0954,0.1,0.0954,0.0954,0.0954,"[[   0    0    0    0    0    0 1282    0    0    0]
 [   0    0    0    0    0    0 1261    0    0    0]
 [   0    0    0    0    0    0 1296    0    0    0]
 [   0    0    0    0    0    0 1223    0    0    0]
 [   0    0    0    0    0    0 1249    0    0    0]
 [   0    0    0    0    0    0 1212    0    0    0]
 [   0    0    0    0    0    0 1192    0    0    0]
 [   0    0    0    0    0    0 1277    0    0    0]
 [   0    0    0    0    0    0 1242    0    0    0]
 [   0    0    0    0    0    0 1266    0    0    0]]"
cifar10,,,,,DummyClassifier,DummyClassifier(strategy='uniform'),0.00099659,0.1015,0.1015,0.1015,0.1015,0.1015,"[[142 125 134 100 135 141 116 124 138 127]
 [143 117 140 137 109 110 128 126 112 139]
 [129 136 143 115 120 134 126 122 129 142]
 [124 136 102 100 111 122 124 124 145 135]
 [132 121 112 122 139 121 121 145 113 123]
 [118 117 126 134 123 129 118  95 135 117]
 [120 120 115 109 114 122 122 117 121 132]
 [137 113 123 134 132 130 116 126 129 137]
 [132 126 130 115 113 125 127 120 129 125]
 [130 124 127 145 123 123 123 127 122 122]]"
cifar10,0,0,0,0,DummyClassifier,DummyClassifier(),0.002989292,0.1,0.1,0.1,0.1,0.1,"[[1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]]"
cifar10,0,0,0,0,DummyClassifier,DummyClassifier(strategy='uniform'),0.00199008,0.0988,0.0988,0.0988,0.0988,0.0988,"[[106 104 101  89 107  94 107 110  86  96]
 [105 100  94  99 101 109  95  96 104  97]
 [100  97 107  91  81 106 105  97 111 105]
 [ 92 105  92 111 101 101 101 105 113  79]
 [104 102 119 102 107  82  89  87  97 111]
 [ 97  92 111 108  90  79 107  97 107 112]
 [109 118 106  91 114 102  73  87  96 104]
 [104 112  98  91  91 106  97  86 117  98]
 [106  98  97 103  96  93  89 105  95 118]
 [102 100  88  82  84  94 100 118 108 124]]"
cifar10,0,0,0,0,LogisticRegression,LogisticRegression(random_state=42),28.95260549,0.3985,0.3985,0.3985,0.3985,0.3985,"[[488  37  54  42  22  28  25  54 176  74]
 [ 54 468  37  44  29  38  38  47  70 175]
 [ 96  36 275 108 117  88 135  79  43  23]
 [ 40  48  97 273  70 188 144  51  31  58]
 [ 53  24 139  77 286  91 172 109  24  25]
 [ 40  46  92 184  97 330  84  67  35  25]
 [ 19  32  79 157  92  92 454  39  12  24]
 [ 51  45  67  72  95  85  38 435  32  80]
 [152  74  28  32  17  37  15  23 520 102]
 [ 66 179  21  36  23  24  50  61  84 456]]"
cifar10,0,0,0,0,DecisionTreeClassifier,DecisionTreeClassifier(random_state=42),327.7638991,0.2693,0.2693,0.2693,0.2693,0.2693,"[[351  77  93  44  61  57  40  44 154  79]
 [ 63 284  70  74  61  54  52  66 107 169]
 [103  57 218  96 141 110 101  86  40  48]
 [ 67  62 110 173 109 137 128  97  65  52]
 [ 60  45 157  98 240  88 123 100  39  50]
 [ 52  63  94 164  91 216 108  95  70  47]
 [ 42  43 114 116 140 117 287  62  21  58]
 [ 70  80  85  93 108 107  62 263  58  74]
 [156  94  43  53  38  47  33  47 380 109]
 [ 89 176  53  73  47  55  47  86  93 281]]"
cifar10,0,0,0,0,KNeighborsClassifier,KNeighborsClassifier(),18.55425882,0.3383,0.3383,0.3383,0.3383,0.3383,"[[541   6 114  16  61   7  24   6 223   2]
 [133 213 106  46 147  36  63  11 222  23]
 [115   5 422  58 243  34  60  11  48   4]
 [ 67   5 243 222 184 112 106  11  48   2]
 [ 64   1 264  47 509  19  36  14  45   1]
 [ 71   6 227 156 194 209  73  13  46   5]
 [ 28   2 257  68 318  38 266   1  21   1]
 [ 96   7 188  40 282  51  55 221  56   4]
 [145  13  38  42  68  16  13   8 650   7]
 [154  60 106  66 122  22  55  26 259 130]]"
cifar10,0,0,0,0,LinearSVC,LinearSVC(random_state=42),3291.571664,0.2504,0.2504,0.2504,0.2504,0.2504,"[[197  38  46  83  48  55  34 190 211  98]
 [ 55 308  46  56  46 102  49  85  98 155]
 [ 77  48 214  60 109 128 152 117  57  38]
 [ 89  74  91 117  82 179 142 117  38  71]
 [ 58  40 180  47 181 153 186  81  42  32]
 [102  49 105  92 144 145 120 108  35 100]
 [ 38  45 119  60  88 149 376  52  24  49]
 [ 56  57  93  34  78 149  96 324  32  81]
 [ 46  46  31  63  51  55  27 123 394 164]
 [ 44 143  27  32  49 102  65 206  84 248]]"
cifar10,0,0,0,0,LinearDiscriminantAnalysis,LinearDiscriminantAnalysis(),112.714884,0.3712,0.3712,0.3712,0.3712,0.3712,"[[467  46  48  51  21  40  20  54 183  70]
 [ 66 422  44  51  35  44  36  46  75 181]
 [105  37 251 106 133  83 139  71  47  28]
 [ 42  50 119 259  64 200 131  48  29  58]
 [ 60  27 157  83 269 104 145 101  24  30]
 [ 39  43 108 192  78 315  88  72  36  29]
 [ 15  46 101 145 124  79 411  43  13  23]
 [ 49  41  86  74  87  94  45 411  39  74]
 [175  83  23  43  11  52  12  22 479 100]
 [ 74 186  26  40  29  30  40  62  85 428]]"
cifar10,0,0,0,0,QuadraticDiscriminantAnalysis,QuadraticDiscriminantAnalysis(),157.7774849,0.3622,0.3622,0.3622,0.3622,0.3622,"[[151 291  27  19  15   4 140  74 109 170]
 [  4 716   0   2   0   0  77  18  20 163]
 [ 14 114 137  27  41  39 412 112  14  90]
 [  7 188  13 134   9  65 276 155  16 137]
 [  4 111   7  10 171  12 376 212  12  85]
 [  1 158  11  58   9 168 276 204  10 105]
 [  7  89   8   6  17   8 789  22   7  47]
 [  0 136   3   8   8  11 132 547   5 150]
 [ 24 301   8   8   7   4  83  52 222 291]
 [  5 284   2   8   3   0  52  44  15 587]]"
coarse,,,,,DummyClassifier,DummyClassifier(),0.002995968,0.05,0.05,0.05,0.05,0.05,"[[500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]
 [500   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
    0   0]]"
coarse,,,,,DummyClassifier,DummyClassifier(strategy='uniform'),0.001993418,0.0521,0.0521,0.0521,0.0521,0.0521,"[[34 28 29 22 25 22 26 20 29 24 16 26 25 25 24 27 24 25 26 23]
 [21 26 30 22 23 26 29 18 28 30 21 22 26 23 23 22 36 29 17 28]
 [22 24 23 25 26 34 30 24 26 24 18 31 21 23 23 31 22 26 19 28]
 [21 18 26 29 21 34 24 14 26 31 21 19 36 23 33 26 27 27 20 24]
 [21 24 31 27 32 16 19 31 19 23 35 20 20 18 27 37 28 22 21 29]
 [27 27 16 28 25 28 27 18 26 32 20 25 24 28 24 28 33 24 20 20]
 [27 34 29 21 35 27 19 24 29 23 22 26 22 25 23 20 25 28 23 18]
 [24 17 30 28 32 18 22 23 27 27 24 26 21 25 23 27 22 28 24 32]
 [30 20 24 22 32 25 24 15 24 26 34 26 25 22 22 27 24 29 25 24]
 [25 17 27 25 24 17 20 31 21 29 27 19 22 27 18 33 26 29 34 29]
 [34 27 40 16 23 28 15 21 21 26 30 23 18 27 24 34 20 29 19 25]
 [32 20 19 26 28 25 27 19 27 29 27 25 30 22 18 28 27 31 19 21]
 [30 35 17 28 24 19 28 37 26 18 19 25 32 29 26 21 25 14 25 22]
 [23 29 27 28 24 26 23 17 22 26 26 21 23 24 26 24 32 28 19 32]
 [23 30 28 27 25 29 20 28 23 24 18 21 26 30 20 19 22 25 33 29]
 [17 22 30 25 24 26 26 26 26 26 26 22 24 28 26 21 25 28 25 27]
 [23 27 20 25 30 23 22 27 22 27 23 30 23 19 14 33 25 19 32 36]
 [22 33 15 31 31 16 31 26 24 23 24 26 25 22 29 26 28 25 16 27]
 [23 20 28 29 27 20 28 29 25 32 26 17 21 28 25 29 26 24 24 19]
 [26 26 23 29 32 30 31 29 24 17 26 20 18 23 28 22 27 22 19 28]]"
coarse,0,0,0,0,LogisticRegression,LogisticRegression(random_state=42),27.92827821,0.2537,0.2537,0.2537,0.2537,0.2537,"[[117  54   2  18   4  24  12  28  21  20  22  31  32  13  10  24  19   7
   22  20]
 [ 60 128  21  17  29  12  14  11  16  13  36  11  22  12  17  25  19  10
   11  16]
 [  3  12 204  16  67   9  18  18  17   6  10  22   9  15  29   8   3  20
    7   7]
 [ 19  18  15 107  28  46  44  21  19   6  23  12  14  14  30  18  14  13
   21  18]
 [  5  10  62  10 191  10  20  29  23   3   3  21   9  17  25  18   9  22
    5   8]
 [ 24  24  15  53  10  94  31  12  20  12  20  13  20  12  26  20  15  16
   42  21]
 [ 13  13  27  31  33  34 117  15  18   7  21  13  16  12  34  11  22   9
   33  21]
 [ 26  16  23  27  25  15  15 144  19   4   2  33  28  23  11  32  17  10
   12  18]
 [ 20  15  21  22  19  18  25  39  55   5   6  33  54  29  23  32  45  11
   16  12]
 [ 26  19   1  12   5  14   6   5   8 176  90  13   5   5   9   7   4  44
   31  20]
 [ 18  27  17  14  10  17   4   6  10  85 197  13   8   3   5  13  10  15
   14  14]
 [ 15  15  10  13  12  16  23  37  16  32  14  87  41  22  10  31  28  28
   32  18]
 [ 15  24  11  21   9  21  11  38  40   7   3  35 107  16  22  27  50   3
   22  18]
 [ 26  39  28  26  30  33  37  36  27   8   8  23  37  30  27  26  28   7
   13  11]
 [ 11  16  25  33  24  22  33  12  21   8  14  17  19  20 151  14  38   7
   11   4]
 [ 27  48  12  32  12  24  29  38  24  15  12  13  41  34   9  47  36  15
   18  14]
 [ 15  24  21  35  15  18  30  48  33   5   7  26  59  12  32  30  53  10
   16  11]
 [ 13  15  13   5  10   8   7  12  12  20  11  16   7   2   3   9   4 311
   13   9]
 [ 18  12  13  16  12  31  14  11  12  54  27  24  20  11  10  21  17  27
  102  48]
 [ 21  19   8  22  10  14  12  15  13  38  32  17  26  10   9  16  16  29
   54 119]]"
coarse,0,0,0,0,DecisionTreeClassifier,DecisionTreeClassifier(random_state=42),382.5739892,0.168,0.168,0.168,0.168,0.168,"[[ 83  39   8  15   4  23  20  17  19  28  23  21  32  30  20  34  21  21
   17  25]
 [ 52  80  18  22  25  19  23  18  15  21  22  16  23  16  23  33  22  15
   17  20]
 [  8  27 129  16  54  14  24  29  16   5  12  13  15  26  34  17  16  17
   16  12]
 [ 17  17  16 107  23  36  27  18  26  20  13  19  19  23  19  30  19  17
   20  14]
 [ 12  22  51  14 116  19  29  18  23   9  17  14  15  23  25  14  27  17
   16  19]
 [ 20  26  15  47  18  73  29  19  25  14  15  17  13  22  23  28  32  17
   20  27]
 [ 17  24  20  36  30  27  68  32  28  16  12  20  18  22  26  28  26  10
   24  16]
 [ 20  18  31  22  16  20  25  68  25   7  13  26  36  34  15  41  34   9
   14  26]
 [ 16  17  15  25  19  24  20  32  49  17   8  38  35  36  28  41  30  10
   18  22]
 [ 26  10   7  16  10  16  25   8   8 113  54  23  13  12  12  18  13  46
   32  38]
 [ 20  18  13  14  10  14  14  13   8  64 161  12  10  13  10  22  13  24
   20  27]
 [ 31  22  16  18  15  23  17  26  38  17  11  52  27  25  18  27  28  25
   33  31]
 [ 25  26  11  24  17  14  28  20  50  10   9  35  57  30  21  35  43  16
   15  14]
 [ 25  22  24  37  25  34  21  27  23   6  15  25  24  57  27  23  31  12
   26  16]
 [ 13  21  25  24  27  30  25  14  31  15  11  22  33  24  67  32  38  16
   15  17]
 [ 29  24  11  23  15  23  28  31  36   9   8  35  20  38  28  45  34  15
   26  22]
 [ 31  22  17  17  24  21  38  21  42  18  12  33  26  27  22  41  53   9
   13  13]
 [ 18  16  10  16  10  10  16  16  11  42  18  27  19  16  13  10  18 169
   26  19]
 [ 23  25  18  21  14  19  26  21  20  43  17  30  22  22  23  18  17  33
   54  34]
 [ 28  16  12  20   9  25  26  20  24  43  33  27  18  21  17  16  15  26
   25  79]]"
coarse,0,0,0,0,KNeighborsClassifier,KNeighborsClassifier(),16.97529268,0.2428,0.2428,0.2428,0.2428,0.2428,"[[148  94   0  16   5  10   4  24  11  11  64   8  11  39   0  24  18   8
    1   4]
 [ 73 204   4  16   8  10  11   2   7   8  52   6  20  33   0  15  12  13
    0   6]
 [ 23  57 127  43  31  12  33   9  13   2  41   3  12  36   2  30  12  12
    0   2]
 [ 29  52   6 233  13  12  21   6   3   6  38   7   7  31   1  13  10   6
    0   6]
 [ 29  50  17  53 159   6  25  10   8   1  33   2  13  34   0  27  16  15
    2   0]
 [ 40  52   6  84  13 101  19  12   4   4  68   9  10  32   2  15  10  13
    1   5]
 [ 37  48   5  67  16  26 111  11   5   9  68   6   8  31   2  23  15   8
    1   3]
 [ 55  51  14  28  12  10  11 132   9   4  11  11  24  57   1  31  29   9
    0   1]
 [ 59  79   4  24   5  19  25  21  50   7  26  18  32  60   1  42  19   7
    1   1]
 [ 29  27   3  10   1   5  10   3   3 121 231   2   8  10   1   4   1  24
    2   5]
 [ 24  31   2   8   1   2   7   2   2  18 343   2   8  18   1   4  13  11
    0   3]
 [ 83  57   3  31   5  14  13  25   8  17  54  45  27  47   2  21  21  24
    1   2]
 [ 74  76   3  30   3  18   9  17  15   5  29  22  82  51   2  24  26   8
    1   5]
 [ 57  83   9  44  20  18  20  23   9   6  37   8  28  83   2  28  21   4
    0   0]
 [ 41  65   5  66  15  21  30  12  16  15  55   8  25  39  39  18  20   6
    1   3]
 [ 71  94   3  39   5  20  15  21   7   2  39  19  20  62   1  48  18  11
    1   4]
 [ 55  78   6  41   8  17  22  11  12   6  30  16  32  49   1  34  71   7
    1   3]
 [ 40  30   2  18   6   4   3   7   5  29  60   8   6  17   1   9  13 235
    0   7]
 [ 58  61   1  24   3  24  17  15   5  30 108  10  15  28   1  18  15  33
   28   6]
 [ 52  36   2  27   3  12  12  11   8  29 125  10  18  24   0  14   9  38
    2  68]]"
coarse,0,0,0,0,LinearSVC,LinearSVC(random_state=42),6371.878662,0.1362,0.1362,0.1362,0.1362,0.1362,"[[ 33  23   4  16   8  49   8  23  17  15  40  19  27  13  36  92  15  26
   21  15]
 [ 18  40  21  12  21  78  12   9  21  16  42  10  20  12  32  82   8  18
   14  14]
 [ 13  15 154  12  31  20  12  11  22  10  24  24  12  23  23  25  11  41
   10   7]
 [ 11  67  14  31  14  46   9  33  16   5  20   7  48  12  60  34  12  15
   33  13]
 [ 10  59  56   8  76  16  16  20  29   6  14  13  24  36  30  28   6  38
    9   6]
 [ 11  65  14  22  13  54  22  23  17   6  43   9  30  21  64  32  14  11
   18  11]
 [ 13  81  22  12   8  27  40  20  15   7  39  13  29  24  86  20  10  15
   15   4]
 [ 24  26  29  12  12  22   9  80  16   5  17  28  42  28  56  21  10  29
   16  18]
 [ 27  18  23  26  16  60  14  17  49   5  23  21  31  28  48  41  16  21
   12   4]
 [  3  52   2  15   3  31  15   6  10  49 107  13  16  12  17  26  25  52
   27  19]
 [  6  73   9   4   1  41   7   1   9  51 146  12  13   9   8  34  17  35
   15   9]
 [ 22  14   8  14  10  36  12  26  26  13  40  38  33  30  35  40  14  52
   23  14]
 [ 23  14  20  24  14  62   6  17  47   6  38  27  42  21  44  42  11  12
   14  16]
 [ 18  41  34  14  14  47  13  17  24   7  34  17  36  24  51  58  11  16
   15   9]
 [ 19  33  34  19  16  37  24  14  24   2  28   8  26  14 104  34  17  12
   26   9]
 [ 27  31  14  15   5  46  13  28  30  13  28  10  42  23  70  51  11  21
   13   9]
 [ 26  40  16  22  10  68  16  19  27   7  25  25  42  25  41  31  23  10
   17  10]
 [  4   9  10   3   6  21  10  15  14  17  60   8  11   7  25  10   5 247
    8  10]
 [ 12  36  12   9   5  25  10  11  19  27  53  23  22  34  37  25  16  44
   55  25]
 [  8  52   7   5  15  31  10  23  19  33  48  14  37  21  31  23  20  46
   31  26]]"
coarse,0,0,0,0,LinearDiscriminantAnalysis,LinearDiscriminantAnalysis(),126.6035268,0.2185,0.2185,0.2185,0.2185,0.2185,"[[127  43   3  16   4  26  12  25  18  23  22  26  41  17  14  22  17   7
   20  17]
 [ 63 111  19   8  23  14  14  10  22  18  28  14  26  17  20  29  23   7
   17  17]
 [  2  11 142  20  56  17  15  20  25   9  10  21  15  26  36  17  16  25
    8   9]
 [ 21  18   8 107  34  57  29  15  22   6  20  17  21  21  24  15  19   7
   23  16]
 [  3  10  44  23 174  17  23  31  24   3   5  24  16  18  23  22  17   7
    7   9]
 [ 22  22   9  49   8  99  31  19  18  15  19  15  18  24  20  19  27  15
   29  22]
 [  8  12  19  35  27  51 103  15  17  15  13  22  17  19  31  18  30   7
   23  18]
 [ 27  12  16  26  23  20  19  96  29   7   3  37  28  37  15  32  25   9
   18  21]
 [ 22  18   8  14  15  18  29  27  71   7   3  36  64  22  25  34  47   8
   20  12]
 [ 25  14   0   8   2  22   8  10   7 154 102  17   4   8   7  15  12  33
   28  24]
 [ 27  21   7  19   6   9   9   3   6 100 197  17  12   8   4  15  13   6
    9  12]
 [ 18  17   3  21  10  19  13  38  35  35  15  57  32  32  17  29  33  29
   28  19]
 [ 17  16   9  22  11  18  19  38  40   6   6  40  80  29  28  29  44   4
   22  22]
 [ 29  24  21  25  20  37  36  35  25   9   8  25  39  32  33  34  39   3
   15  11]
 [ 13  18  15  42  18  29  32  14  37   9   5  16  25  28 106  18  31  12
   17  15]
 [ 27  33   5  26  10  29  25  36  34  17  10  17  48  31  11  48  35  14
   25  19]
 [ 19  15  10  37  12  26  29  23  51  11   8  26  47  28  34  24  64   9
   16  11]
 [ 15  14   8   6  10  16   7  12  20  34  13  15  14   6   8  11   7 258
   13  13]
 [ 19  13  11  13  12  36  20  11  15  59  36  17  29  11  15  22  22  15
   78  46]
 [ 20  16   5  22   9  22  14  17  18  54  44  19  17  13  12  20  22  22
   53  81]]"
coarse,0,0,0,0,QuadraticDiscriminantAnalysis,QuadraticDiscriminantAnalysis(),141.7488444,0.0568,0.0568,0.0568,0.0568,0.0568,"[[ 0  0 29 31 26 72 55 18 17 51 31 15 30  0  0 24  0 45 20 36]
 [ 0  0 38 32 27 48 47 22 27 45 31 21 29  0  0 33  0 39 26 35]
 [ 0  0 48 28 30 41 37 27 31 54 30 19 30  0  0 33  0 37 15 40]
 [ 0  0 35 33 26 60 51 27 26 45 29 22 25  0  0 22  0 50 20 29]
 [ 0  0 31 32 29 59 49 29 18 34 31 20 23  0  0 40  0 37 26 42]
 [ 0  0 26 25 30 63 50 28 28 48 41 18 28  0  0 28  0 37 20 30]
 [ 0  0 37 31 19 56 46 28 20 54 36 27 21  0  0 33  0 38 20 34]
 [ 0  0 26 23 31 59 40 28 28 52 42 13 21  0  0 36  0 37 27 37]
 [ 0  0 35 28 31 49 44 31 26 45 34 18 30  0  0 38  0 40 18 33]
 [ 0  0 26 24 20 53 43 22 29 61 37 34 23  0  0 30  0 40 22 36]
 [ 0  0 23 38 21 63 53 28 24 49 38 19 21  0  0 37  0 39 21 26]
 [ 0  0 32 29 21 58 55 28 25 43 35 24 31  0  0 28  0 46 13 32]
 [ 0  0 30 32 22 64 42 36 31 51 34 16 23  0  0 20  0 39 30 30]
 [ 0  0 29 27 31 51 51 26 24 48 32 17 29  0  0 29  0 43 23 40]
 [ 0  0 38 33 28 45 39 30 27 51 34 14 30  0  0 32  0 28 26 45]
 [ 0  0 25 31 13 61 32 30 26 54 38 24 29  0  0 36  0 37 25 39]
 [ 0  0 27 27 26 52 33 29 22 59 41 15 37  0  0 34  0 39 26 33]
 [ 0  0 25 28 27 62 37 26 21 52 45 19 18  0  0 27  0 53 18 42]
 [ 0  0 26 46 18 54 45 24 24 52 27 17 24  0  0 36  0 43 20 44]
 [ 0  0 38 33 22 56 40 27 28 53 44 14 19  0  0 23  0 43 20 40]]"
Fashion,,,,,DummyClassifier,DummyClassifier(),0.002994299,0.1,0.1,0.1,0.1,0.1,"[[1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]
 [1000    0    0    0    0    0    0    0    0    0]]"
Fashion,,,,,DummyClassifier,DummyClassifier(strategy='uniform'),0.002985001,0.1007,0.1007,0.1007,0.1007,0.1007,"[[ 99  96 101  98 101 104 105 108  94  94]
 [ 93 111  92  96  86  94 119 123 106  80]
 [ 84 104 104  98  85 116 115  88  88 118]
 [105 106  87 103 107 106 103 107  96  80]
 [106 110  83  98 108 106  92  89 111  97]
 [ 95  97 110 110  97  93  91  89 107 111]
 [ 98  90 102 103  91 113 103  92 103 105]
 [104  99 114 114  99  89  91  88  98 104]
 [ 97  99 106  98  74 112 120  93 100 101]
 [ 99  96 111  99 101 112  95  88 101  98]]"
fashion,0,0,0,0,LogisticRegression,LogisticRegression(random_state=42),8.004303455,0.8515,0.8515,0.8515,0.8515,0.8515,"[[817   3  16  36   2   4 104   1  16   1]
 [  1 977   2  13   0   1   6   0   0   0]
 [ 21   1 757  10 105   0  99   0   7   0]
 [ 39  21  14 866  27   2  25   0   6   0]
 [  1   2  81  26 800   1  84   1   4   0]
 [  1   2   0   1   0 916   1  47   5  27]
 [158   3 100  34  90   2 595   0  18   0]
 [  0   0   0   0   0  37   0 916   2  45]
 [  6   0   7   5   4   9  26   4 934   5]
 [  0   0   0   0   0  17   0  45   1 937]]"
fashion,0,0,0,0,DecisionTreeClassifier,DecisionTreeClassifier(random_state=42),55.29355812,0.7983,0.7983,0.7983,0.7983,0.7983,"[[742   6  18  40   6   3 169   3  13   0]
 [  4 961   3  19   8   0   4   0   1   0]
 [ 25   5 686  18 135   3 116   0  11   1]
 [ 42  28  17 816  61   1  32   0   3   0]
 [  5   4 147  50 689   1  93   0  10   1]
 [  1   1   0   0   1 872   4  69  19  33]
 [159  10 106  39 100   1 570   0  14   1]
 [  0   0   0   0   0  53   0 860   7  80]
 [ 20   1  16   7  19  10  20   7 895   5]
 [  1   0   0   1   1  24   4  72   5 892]]"
fashion,0,0,0,0,KNeighborsClassifier,KNeighborsClassifier(),6.472417831,0.8612,0.8612,0.8612,0.8612,0.8612,"[[882   2  15  13   5   0  78   1   3   1]
 [  5 972   2  15   3   0   3   0   0   0]
 [ 21   0 785  11 100   0  82   0   1   0]
 [ 40  10  11 882  33   0  24   0   0   0]
 [  2   0  90  26 797   0  84   0   1   0]
 [  2   0   0   1   0 840   5  93   2  57]
 [196   3 101  20  65   0 609   0   6   0]
 [  0   0   0   0   0   6   0 942   0  52]
 [  5   1  14   2   7   2  21   6 939   3]
 [  0   0   0   0   0   5   0  31   0 964]]"
fashion,0,0,0,0,LinearSVC,LinearSVC(random_state=42),452.4037702,0.8394,0.8394,0.8394,0.8394,0.8394,"[[757   2  31  30   3   5 150   2  20   0]
 [  0 970   4  14   0   1  10   1   0   0]
 [ 11   5 722   9 167   0  74   2   9   1]
 [ 28  25  14 858  26   3  35   1   9   1]
 [  2   3  69  25 835   1  59   2   4   0]
 [  1   4   0   0   0 909   0  51  11  24]
 [121   7 128  33 109   0 572   2  28   0]
 [  0   1   0   0   0  45   0 908   1  45]
 [  4   2   9  11   2  15  23   6 926   2]
 [  0   0   2   0   1  17   0  40   3 937]]"
fashion,0,0,0,0,LinearDiscriminantAnalysis,LinearDiscriminantAnalysis(),19.47896266,0.8253,0.8253,0.8253,0.8253,0.8253,"[[766   0  16  69   1   3 127   0  18   0]
 [  3 938  10  37   0   1  11   0   0   0]
 [ 18   0 713   8 150   2  99   0  10   0]
 [ 22   3  18 871  25   3  58   0   0   0]
 [  0   1  79  24 782   1 110   0   3   0]
 [  1   0   1   0   0 890   1  69  12  26]
 [144   0 102  39  85   2 610   0  18   0]
 [  0   0   0   0   0  69   0 859   0  72]
 [  2   0   5  10   4  23  34   4 917   1]
 [  0   0   0   0   0  39   0  54   0 907]]"
fashion,0,0,0,0,QuadraticDiscriminantAnalysis,QuadraticDiscriminantAnalysis(),10.05461383,0.2433,0.2433,0.2433,0.2433,0.2433,"[[ 862    0    0    0    0    0   95    0   43    0]
 [ 745    0    0    0    0    0  253    0    2    0]
 [  88    0    0    0    0    0  886    0   26    0]
 [ 730    0    0    0    0    0  265    0    5    0]
 [  59    0    0    0    0    0  931    0   10    0]
 [   0    0    0    0    0    0   23    0  977    0]
 [ 303    0    0    0    0    0  648    0   49    0]
 [   0    0    0    0    0    0    0    0 1000    0]
 [  47    0    0    0    0    0   30    0  923    0]
 [   0    0    0    0    0    0   23    0  977    0]]"
fashion,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=2, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",2.997669697,0.8458,0.8458,0.8458,0.8458,0.8458,"[[820   6  14  57   9   1  77   0  16   0]
 [  5 957   4  21   3   4   5   0   1   0]
 [ 13   1 758   8 134   2  77   0   7   0]
 [ 30   9  15 877  35   1  31   0   1   1]
 [  1   0  88  40 797   3  66   0   5   0]
 [  2   3   3   1   1 906   1  54   5  24]
 [178   3 124  41  84   2 554   0  13   1]
 [  0   0   1   0   0  24   0 915   1  59]
 [  8   2  13   5   6   5  13   4 941   3]
 [  0   0   1   0   0   9   0  52   5 933]]"
fashion,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=2, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",2.952618837,0.8458,0.8458,0.8458,0.8458,0.8458,"[[820   6  14  57   9   1  77   0  16   0]
 [  5 957   4  21   3   4   5   0   1   0]
 [ 13   1 758   8 134   2  77   0   7   0]
 [ 30   9  15 877  35   1  31   0   1   1]
 [  1   0  88  40 797   3  66   0   5   0]
 [  2   3   3   1   1 906   1  54   5  24]
 [178   3 124  41  84   2 554   0  13   1]
 [  0   0   1   0   0  24   0 915   1  59]
 [  8   2  13   5   6   5  13   4 941   3]
 [  0   0   1   0   0   9   0  52   5 933]]"
fashion,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=2, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",2.307663918,0.8269,0.8269,0.8269,0.8269,0.8269,"[[792   2  15  82   8   5  79   0  17   0]
 [  5 950   4  32   5   2   2   0   0   0]
 [ 14   1 756  12 146   0  60   0  11   0]
 [ 23  12   9 879  36   3  35   0   3   0]
 [  6   2 114  40 759   3  70   0   6   0]
 [  0   4   2   1   0 883   2  73   4  31]
 [173   4 126  52  89   2 529   2  23   0]
 [  0   1   0   0   0  22   0 891   4  82]
 [  4   0  17  15  30  13  14   8 897   2]
 [  0   1   3   3   0  11   0  47   2 933]]"
fashion,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=2, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",2.805623293,0.8458,0.8458,0.8458,0.8458,0.8458,"[[820   6  14  57   9   1  77   0  16   0]
 [  5 957   4  21   3   4   5   0   1   0]
 [ 13   1 758   8 134   2  77   0   7   0]
 [ 30   9  15 877  35   1  31   0   1   1]
 [  1   0  88  40 797   3  66   0   5   0]
 [  2   3   3   1   1 906   1  54   5  24]
 [178   3 124  41  84   2 554   0  13   1]
 [  0   0   1   0   0  24   0 915   1  59]
 [  8   2  13   5   6   5  13   4 941   3]
 [  0   0   1   0   0   9   0  52   5 933]]"
fashion,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=4, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",2.580103159,0.8337,0.8337,0.8337,0.8337,0.8337,"[[825   1  14  61   7   2  74   0  16   0]
 [  8 927   6  49   6   1   2   0   1   0]
 [ 15   0 748  12 147   2  64   0  11   1]
 [ 27   7  12 896  25   1  32   0   0   0]
 [  4   0  83  54 786   2  65   1   5   0]
 [  0   1   1   4   0 867   1  76   6  44]
 [189   2 129  44  86   1 530   0  19   0]
 [  0   0   0   0   0  19   0 897   2  82]
 [  2   1  12  11  26  11   8   4 922   3]
 [  1   0   2   1   0   9   1  46   1 939]]"
fashion,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=4, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",4.043602705,0.8551,0.8551,0.8551,0.8551,0.8551,"[[827   3  12  53   9   0  83   0  13   0]
 [  6 960   5  19   2   3   4   0   1   0]
 [ 11   2 769   8 139   2  59   0  10   0]
 [ 26  11  16 889  31   0  26   0   1   0]
 [  0   0  78  41 811   1  64   0   5   0]
 [  0   1   2   1   0 913   2  54   3  24]
 [178   3 118  40  75   1 570   0  15   0]
 [  0   0   0   0   0  19   0 922   3  56]
 [  2   1  14   8   5   6  10   4 948   2]
 [  0   0   1   0   0  11   1  43   2 942]]"
fashion,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=8, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",3.898549318,0.8345,0.8345,0.8345,0.8345,0.8345,"[[824   1  16  65   7   1  70   0  16   0]
 [  7 945   5  36   2   2   2   0   1   0]
 [ 14   1 757   8 149   4  60   0   7   0]
 [ 28   6  14 896  26   2  27   0   1   0]
 [  1   0  88  64 783   1  58   0   5   0]
 [  0   0   1   3   1 879   0  67   7  42]
 [193   3 140  41  85   1 517   0  20   0]
 [  0   0   0   0   0  14   0 900   2  84]
 [  2   0  19   8  32   7  19   5 906   2]
 [  0   1   1   0   0   7   1  50   2 938]]"
fashion,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=8, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",6.456513643,0.8648,0.8648,0.8648,0.8648,0.8648,"[[843   3  12  50   4   0  75   0  13   0]
 [  6 964   5  17   2   3   3   0   0   0]
 [  8   1 781   9 128   2  61   0  10   0]
 [ 26  10  11 899  30   0  23   0   1   0]
 [  1   0  77  40 817   1  61   0   3   0]
 [  0   0   0   1   0 923   1  53   3  19]
 [165   3 115  33  69   0 601   0  14   0]
 [  0   0   0   0   0  16   0 924   3  57]
 [  3   1  12   5   5   6   9   4 953   2]
 [  0   0   0   0   0   7   1  46   3 943]]"
fashion,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=16, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",6.378492355,0.8376,0.8376,0.8376,0.8376,0.8376,"[[808   0  17  72   6   1  79   0  16   1]
 [  7 941   7  35   3   2   4   0   1   0]
 [ 10   0 775   9 137   2  58   0   9   0]
 [ 24   7  14 899  24   1  29   0   2   0]
 [  0   0  89  59 788   3  57   0   4   0]
 [  0   0   0   2   0 883   1  72   4  38]
 [185   5 129  44  91   1 527   0  18   0]
 [  0   0   0   0   0  14   0 904   1  81]
 [  1   1  19   8  28   8  14   5 913   3]
 [  0   0   1   1   0   4   1  53   2 938]]"
fashion,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=16, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",11.43550515,0.8707,0.8707,0.8707,0.8707,0.8707,"[[844   1  12  45   3   0  84   0  11   0]
 [  6 964   4  19   2   2   3   0   0   0]
 [  9   0 788   9 119   1  65   0   9   0]
 [ 26   8  10 898  34   0  24   0   0   0]
 [  0   0  73  32 836   0  55   0   4   0]
 [  0   0   0   1   0 928   1  47   5  18]
 [164   1 109  32  69   0 611   0  14   0]
 [  0   0   0   0   0  16   0 928   2  54]
 [  2   1   7   0   5   4  13   4 962   2]
 [  0   0   0   0   0   6   1  44   1 948]]"
fashion,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=32, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",11.79921675,0.8383,0.8383,0.8383,0.8383,0.8383,"[[812   1  16  68   7   1  78   0  16   1]
 [  6 944   6  35   3   2   3   0   1   0]
 [ 12   1 780  10 132   1  53   0  11   0]
 [ 27   6  13 894  27   1  31   0   1   0]
 [  1   0  84  66 781   2  61   0   5   0]
 [  0   0   1   2   0 885   2  65   4  41]
 [187   5 134  50  89   1 513   0  21   0]
 [  0   0   0   0   0  14   0 904   1  81]
 [  2   1  14   8  12   8  17   5 929   4]
 [  0   0   2   0   0   5   1  49   2 941]]"
fashion,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=32, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",21.1422739,0.8836,0.8836,0.8836,0.8836,0.8836,"[[858   1  10  33   3   0  83   0  12   0]
 [  5 970   3  17   1   1   2   0   1   0]
 [  9   0 803  10 111   1  58   0   8   0]
 [ 25   7  11 907  27   0  23   0   0   0]
 [  1   0  68  29 854   0  44   0   4   0]
 [  0   0   0   0   0 941   1  40   3  15]
 [155   2 100  27  62   0 643   0  11   0]
 [  0   0   0   0   0  15   0 937   2  46]
 [  1   1   8   0   3   1  12   4 969   1]
 [  0   0   0   0   0   5   1  37   3 954]]"
fashion,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=64, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",23.77033257,0.8392,0.8392,0.8392,0.8392,0.8392,"[[816   2  15  65   7   1  78   0  16   0]
 [  6 944   6  38   3   1   1   0   1   0]
 [ 11   1 777   9 130   1  60   0  11   0]
 [ 27   8  11 898  26   1  28   0   1   0]
 [  1   0  89  66 777   1  62   1   3   0]
 [  0   0   1   2   1 892   1  64   4  35]
 [188   4 126  44  93   2 524   0  19   0]
 [  0   0   0   0   0  13   0 904   3  80]
 [  2   0  16   9  25   9  14   5 917   3]
 [  0   0   1   1   0   4   1  48   2 943]]"
fashion,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=64, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",39.88065457,0.8954,0.8954,0.8954,0.8954,0.8954,"[[866   1   9  27   3   0  84   0  10   0]
 [  3 978   3  13   1   1   1   0   0   0]
 [  8   0 813  12  93   0  68   0   6   0]
 [ 24   5  10 915  23   0  23   0   0   0]
 [  1   0  61  25 865   0  44   0   4   0]
 [  0   0   0   0   0 952   1  33   3  11]
 [146   3  89  23  53   0 676   0  10   0]
 [  0   0   0   0   0  11   0 952   1  36]
 [  1   1   7   0   3   2   7   3 975   1]
 [  0   0   0   0   0   4   1  31   2 962]]"
fashion,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=128, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",47.82774234,0.8401,0.8401,0.8401,0.8401,0.8401,"[[809   2  17  70   7   1  78   0  16   0]
 [  6 943   7  36   3   1   3   0   1   0]
 [ 11   1 775  10 136   1  56   0  10   0]
 [ 27   8  11 895  30   1  27   0   1   0]
 [  1   0  88  64 779   2  61   0   5   0]
 [  0   0   1   2   0 893   1  62   4  37]
 [184   4 128  45  87   2 530   0  20   0]
 [  0   0   0   0   0  14   0 901   2  83]
 [  1   1  14   8  16   6  14   5 932   3]
 [  0   0   1   0   0   5   1  47   2 944]]"
fashion,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=128, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",72.73407245,0.9055,0.9055,0.9055,0.9055,0.9055,"[[876   1   9  25   2   0  78   0   9   0]
 [  2 980   2  13   1   1   1   0   0   0]
 [  6   0 832  13  77   0  66   0   6   0]
 [ 23   5  12 920  18   0  22   0   0   0]
 [  1   0  51  24 879   0  41   0   4   0]
 [  0   0   0   0   0 958   1  30   2   9]
 [139   2  76  20  48   0 708   0   7   0]
 [  0   0   0   0   0   7   0 958   0  35]
 [  1   1   9   0   2   1   5   2 979   0]
 [  0   0   0   0   0   2   1  31   1 965]]"
fashion,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(2, 2),Dropout:0)",383.1837902,0.7177,0.7177,0.7177,0.7177,0.7177,"[[727   4  11 103   6  18  76   0  55   0]
 [ 13 931   0  44   2   1   8   0   1   0]
 [ 47   0 483  12 241   0 195   0  22   0]
 [106  23   0 799  25   5  40   0   2   0]
 [ 10   0 150  60 698   1  77   0   4   0]
 [ 18   1   1   0   0 775   0 167  18  20]
 [225   0 219  68 148   3 305   0  31   1]
 [  0   0   0   0   0 150   0 736   3 111]
 [ 41   2  19   0   3   9  35  12 873   6]
 [  0   0   0   0   0  13   0 132   5 850]]"
fashion,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(4, 4),Dropout:0)",142.0234408,0.8142,0.8142,0.8142,0.8142,0.8142,"[[772  10  15  76   1   2 105   0  19   0]
 [  5 961   5  18   2   0   5   0   0   4]
 [ 13   1 697   9 148   4 115   0  12   1]
 [ 54  23   8 842  26   1  32   0  14   0]
 [  1   5  96  24 779   0  93   0   1   1]
 [  5   0   7   1   0 879   0  57  17  34]
 [155   4 139  47 116   5 512   0  22   0]
 [  3   0   1   0   0  67   0 869   2  58]
 [ 12   1  15  20   7  27  10   6 902   0]
 [  0   1   2   0   0  29   0  39   0 929]]"
fashion,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(8, 8),Dropout:0)",89.45949864,0.8582,0.8582,0.8582,0.8582,0.8582,"[[835   2  16  32   1   4  95   0  15   0]
 [  2 974   1  15   2   1   5   0   0   0]
 [ 12   1 759  11 119   0  89   0   9   0]
 [ 31  13  14 881  32   3  23   1   2   0]
 [  0   4  81  26 797   2  86   0   4   0]
 [  2   0   1   0   0 902   0  60   8  27]
 [164   3  87  28  73   0 622   0  23   0]
 [  0   0   0   0   0  26   0 920   2  52]
 [  6   0   8   5  11   7  18   3 939   3]
 [  0   0   1   0   0  12   0  32   2 953]]"
fashion,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(16, 16),Dropout:0)",81.96072674,0.8703,0.8703,0.8703,0.8703,0.8703,"[[813   0   8  33   2   3 131   1   9   0]
 [  3 976   2  12   2   0   4   0   1   0]
 [ 16   2 780  13  99   0  86   0   4   0]
 [ 24  10   9 909  22   1  23   0   1   1]
 [  1   0  86  30 813   0  66   0   4   0]
 [  1   0   0   1   0 915   0  48  12  23]
 [154   3  76  33  65   0 660   0   9   0]
 [  0   0   0   0   0  17   0 935   2  46]
 [  7   1  10   7   1   3  12   2 955   2]
 [  0   0   0   1   0  14   0  36   2 947]]"
fashion,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(32, 32),Dropout:0)",126.2863479,0.8804,0.8804,0.8804,0.8804,0.8804,"[[845   1  15  22   4   2 105   0   4   2]
 [  2 980   0  12   0   1   4   0   1   0]
 [ 16   2 810  16  88   1  63   0   4   0]
 [ 28   9  12 898  30   0  20   0   3   0]
 [  1   0  86  32 827   2  48   0   4   0]
 [  2   0   1   1   0 917   2  44   5  28]
 [142   3  79  37  59   0 672   0   8   0]
 [  0   0   0   0   0  21   0 940   0  39]
 [  4   2   8   5   3   7  12   1 955   3]
 [  0   0   0   0   0   8   0  31   1 960]]"
fashion,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(64, 64),Dropout:0)",83.31298161,0.8897,0.8897,0.8897,0.8897,0.8897,"[[819   0  23  21   3   1 128   1   4   0]
 [  3 982   2  10   0   1   1   0   1   0]
 [ 14   1 819  16  77   2  68   0   3   0]
 [ 18  10   8 917  24   0  22   0   1   0]
 [  1   0  79  26 830   0  63   0   1   0]
 [  0   1   0   1   0 930   2  38   6  22]
 [122   1  59  31  54   0 724   0   9   0]
 [  0   0   0   0   0  13   0 945   1  41]
 [  4   1   4   7   1   2  13   3 965   0]
 [  0   1   0   0   0   7   0  26   0 966]]"
fashion,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(128, 128),Dropout:0)",90.9435041,0.8955,0.8955,0.8955,0.8955,0.8955,"[[845   1  21  21   1   1 104   1   5   0]
 [  2 989   1   7   0   0   0   0   1   0]
 [ 15   0 829  14  68   0  70   0   4   0]
 [ 23   9  10 918  27   0  11   0   2   0]
 [  2   1  73  33 835   1  52   0   3   0]
 [  2   1   1   2   0 937   0  37   7  13]
 [123   2  68  24  56   0 720   1   5   1]
 [  0   0   0   1   0   6   0 961   0  32]
 [  5   0   4   3   2   1  13   3 967   2]
 [  0   1   1   0   0   4   0  39   1 954]]"
fashion,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",176.5316033,0.9125,0.9125,0.9125,0.9125,0.9125,"[[870   2  17  18   1   0  86   0   6   0]
 [  1 984   2  10   0   1   2   0   0   0]
 [ 13   0 864  10  51   0  61   0   1   0]
 [ 16   7   5 936  20   0  16   0   0   0]
 [  2   0  49  20 884   0  44   0   1   0]
 [  0   1   0   0   0 954   0  30   2  13]
 [128   0  55  33  48   0 730   0   6   0]
 [  0   0   0   0   0  11   0 953   0  36]
 [  2   1   1   3   3   1   9   1 979   0]
 [  0   0   0   0   0   4   0  25   0 971]]"
fashion,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",207.5029845,0.9214,0.9214,0.9214,0.9214,0.9214,"[[874   0  14  20   3   0  87   0   2   0]
 [  3 983   2   8   2   0   1   0   1   0]
 [ 16   0 862  10  58   0  53   0   1   0]
 [ 13   5   5 946  17   0  14   0   0   0]
 [  2   0  29  20 898   0  50   0   1   0]
 [  0   1   0   1   0 959   1  28   1   9]
 [ 95   1  43  30  43   0 785   0   3   0]
 [  0   0   0   0   0   4   0 964   0  32]
 [  0   1   4   3   2   1  12   1 975   1]
 [  0   0   0   0   0   7   0  25   0 968]]"
fashion,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",208.1960702,0.9266,0.9266,0.9266,0.9266,0.9266,"[[885   0  18  18   2   0  75   0   2   0]
 [  2 988   1   6   1   0   1   0   1   0]
 [ 17   0 875  11  58   0  39   0   0   0]
 [ 10   7   6 939  22   0  15   0   1   0]
 [  3   0  32  15 916   0  34   0   0   0]
 [  0   0   0   0   0 972   1  20   1   6]
 [ 93   0  43  27  61   0 774   0   2   0]
 [  0   0   0   0   0   5   0 968   0  27]
 [  1   1   2   3   3   1   9   2 978   0]
 [  0   0   0   0   0   3   0  26   0 971]]"
fashion,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",232.8874171,0.9147,0.9147,0.9147,0.9147,0.9147,"[[880   1  13  21   2   0  78   0   5   0]
 [  3 988   0   8   0   0   0   0   1   0]
 [ 18   0 870  10  51   0  50   0   1   0]
 [ 16   8   7 925  25   0  18   0   1   0]
 [  0   1  47  20 891   0  40   0   1   0]
 [  0   0   0   0   0 948   0  39   2  11]
 [124   1  56  20  56   0 737   0   6   0]
 [  0   0   0   0   0   9   0 955   0  36]
 [  1   2   2   3   4   1   7   1 979   0]
 [  0   0   0   0   0   2   0  24   0 974]]"
fashion,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",184.6157246,0.9222,0.9222,0.9222,0.9222,0.9222,"[[868   0  22  20   1   0  87   0   2   0]
 [  2 988   2   7   0   0   1   0   0   0]
 [ 11   1 894  12  41   0  40   0   1   0]
 [ 12   5   6 938  19   0  20   0   0   0]
 [  1   0  52  19 884   0  44   0   0   0]
 [  0   1   0   0   0 971   0  16   2  10]
 [103   1  60  24  41   0 769   1   1   0]
 [  0   0   0   0   0   6   0 963   0  31]
 [  2   2   0   2   2   1  15   2 974   0]
 [  0   0   0   0   0   2   0  25   0 973]]"
fashion,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",276.9135525,0.9245,0.9245,0.9245,0.9245,0.9245,"[[887   0  25  13   2   0  68   2   3   0]
 [  0 986   1  10   0   0   2   0   1   0]
 [ 14   0 909  10  37   0  29   0   1   0]
 [ 12   5   7 934  19   0  23   0   0   0]
 [  0   0  39  22 904   0  33   0   1   1]
 [  0   1   0   0   0 963   0  22   3  11]
 [110   1  60  22  53   0 754   0   0   0]
 [  0   0   0   0   0   8   0 961   0  31]
 [  4   2   4   4   1   2   4   3 976   0]
 [  0   0   0   0   1   4   0  24   0 971]]"
fashion,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",336.6144032,0.9146,0.9146,0.9146,0.9146,0.9146,"[[866   0  19  17   0   0  92   1   5   0]
 [  1 994   2   1   0   0   1   0   1   0]
 [ 15   2 877   9  51   1  42   0   3   0]
 [ 10   6   8 933  21   0  20   0   2   0]
 [  1   0  52  16 882   0  48   0   1   0]
 [  0   1   0   0   0 961   0  27   2   9]
 [115   1  52  30  63   0 736   0   3   0]
 [  0   0   0   0   0  13   0 954   0  33]
 [  5   2   3   3   1   3   5   2 975   1]
 [  0   0   0   0   1   3   0  27   1 968]]"
fashion,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",156.0061297,0.9184,0.9184,0.9184,0.9184,0.9184,"[[887   0  19  13   2   0  75   0   4   0]
 [  0 983   1  11   2   1   2   0   0   0]
 [ 18   0 874  12  42   0  53   0   1   0]
 [  7   5   7 936  21   0  23   0   1   0]
 [  4   0  37  27 889   0  43   0   0   0]
 [  0   1   0   0   0 954   0  29   2  14]
 [122   1  49  26  51   0 747   0   4   0]
 [  0   0   0   0   0   5   0 968   0  27]
 [  7   2   6   0   3   2   4   0 976   0]
 [  0   0   0   0   1   2   0  27   0 970]]"
fashion,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",489.2685046,0.9278,0.9278,0.9278,0.9278,0.9278,"[[893   0  20  11   1   1  69   1   3   1]
 [  1 986   1   6   1   0   4   0   1   0]
 [ 15   0 893  12  39   0  40   0   1   0]
 [ 12   3   5 934  20   0  26   0   0   0]
 [  1   1  28  20 910   0  40   0   0   0]
 [  0   1   0   0   0 970   0  22   1   6]
 [107   0  43  27  43   0 776   0   4   0]
 [  0   0   0   0   0   4   0 968   0  28]
 [  1   0   2   2   3   2   6   1 983   0]
 [  0   0   0   0   1   1   0  33   0 965]]"
fine,,,,,DummyClassifier,DummyClassifier(),0.002982855,0.01,0.01,0.01,0.01,0.01,"[[100   0   0 ...   0   0   0]
 [100   0   0 ...   0   0   0]
 [100   0   0 ...   0   0   0]
 ...
 [100   0   0 ...   0   0   0]
 [100   0   0 ...   0   0   0]
 [100   0   0 ...   0   0   0]]"
fine,,,,,DummyClassifier,DummyClassifier(strategy='uniform'),0.002990246,0.0095,0.0095,0.0095,0.0095,0.0095,"[[1 1 1 ... 2 0 1]
 [0 1 2 ... 1 0 1]
 [2 0 1 ... 1 2 4]
 ...
 [1 0 3 ... 1 1 1]
 [0 1 0 ... 1 1 3]
 [0 0 0 ... 2 2 0]]"
fine,0,0,0,0,LogisticRegression,LogisticRegression(random_state=42),70.36148334,0.1538,0.1538,0.1538,0.1538,0.1538,"[[26  3  0 ...  0  0  0]
 [ 2 20  0 ...  0  1  0]
 [ 3  1  7 ...  3  2  1]
 ...
 [ 0  1  2 ... 10  1  1]
 [ 1  1  1 ...  0  7  0]
 [ 0  0  0 ...  0  0  1]]"
fine,0,0,0,0,DecisionTreeClassifier,DecisionTreeClassifier(random_state=42),970.8242939,0.082,0.082,0.082,0.082,0.082,"[[18  4  0 ...  1  1  0]
 [ 0 17  1 ...  2  0  0]
 [ 1  1  5 ...  5  1  2]
 ...
 [ 0  0  1 ...  5  2  1]
 [ 2  1  1 ...  1  3  0]
 [ 0  1  3 ...  1  0  8]]"
fine,0,0,0,0,KNeighborsClassifier,KNeighborsClassifier(),20.79769778,0.1502,0.1502,0.1502,0.1502,0.1502,"[[62  1  0 ...  0  0  0]
 [ 6 22  0 ...  0  0  1]
 [ 0  1 19 ...  0  0  4]
 ...
 [ 1  0  3 ... 10  0  2]
 [ 2  0  8 ...  1  1  1]
 [ 0  2  0 ...  0  0 14]]"
fine,0,0,0,0,LinearSVC,LinearSVC(random_state=42),23134.86515,0.0878,0.0878,0.0878,0.0878,0.0878,"[[26  7  1 ...  0  1  0]
 [ 1 11  4 ...  3  1  0]
 [ 1  2  8 ...  2  0  1]
 ...
 [ 0  1  0 ...  9  1  5]
 [ 3  2  2 ...  1  6  1]
 [ 1  0  2 ...  8  1  1]]"
fine,0,0,0,0,LinearDiscriminantAnalysis,LinearDiscriminantAnalysis(),130.1141534,0.1334,0.1334,0.1334,0.1334,0.1334,"[[38  4  0 ...  0  0  0]
 [ 1 11  2 ...  3  0  0]
 [ 0  1  7 ...  7  5  4]
 ...
 [ 0  0  1 ... 15  0  2]
 [ 0  2  1 ...  2  9  1]
 [ 1  1  1 ...  5  1  3]]"
fine,0,0,0,0,QuadraticDiscriminantAnalysis,QuadraticDiscriminantAnalysis(),91.53389311,0.0138,0.0138,0.0138,0.0138,0.0138,"[[2 0 1 ... 0 0 1]
 [1 0 0 ... 0 1 1]
 [3 0 0 ... 0 0 2]
 ...
 [0 0 0 ... 3 1 3]
 [1 0 3 ... 0 0 2]
 [1 0 0 ... 1 1 1]]"
mnist,,,,,DummyClassifier,DummyClassifier(),0.002998352,0.1135,0.1,0.1135,0.1135,0.1135,"[[   0  980    0    0    0    0    0    0    0    0]
 [   0 1135    0    0    0    0    0    0    0    0]
 [   0 1032    0    0    0    0    0    0    0    0]
 [   0 1010    0    0    0    0    0    0    0    0]
 [   0  982    0    0    0    0    0    0    0    0]
 [   0  892    0    0    0    0    0    0    0    0]
 [   0  958    0    0    0    0    0    0    0    0]
 [   0 1028    0    0    0    0    0    0    0    0]
 [   0  974    0    0    0    0    0    0    0    0]
 [   0 1009    0    0    0    0    0    0    0    0]]"
mnist,,,,,DummyClassifier,DummyClassifier(strategy='uniform'),0.002990007,0.1039,0.104,0.1039,0.1039,0.1039,"[[122 105  89  84  95  85  96 108  97  99]
 [137 114 111  94 120 107 115 102 128 107]
 [100  87 107 108 101 107 105  90  98 129]
 [ 90 124 117  87  97  96  91  93 105 110]
 [ 98  94 108  90 112  93 104  90 105  88]
 [ 87  92  98  87  85  92  98 102  82  69]
 [ 93  93  80 111  83  94  95 102  97 110]
 [105 104  90 106  91 113 101  96 109 113]
 [105  93  95  99  88 103  91 106  99  95]
 [110  98  90 102  80  95 102 108 109 115]]"
mnist,0,0,0,0,LogisticRegression,LogisticRegression(random_state=42),7.979251623,0.9232,0.9221,0.9232,0.9232,0.9232,"[[ 954    0    2    2    2   10    6    2    2    0]
 [   0 1110    7    2    0    2    3    1   10    0]
 [   9   12  924   17   10    4   12    8   33    3]
 [   4    1   18  922    3   25    2   11   18    6]
 [   1    3    8    3  913    1    8    8    6   31]
 [   9    5    3   28    9  781   15    8   30    4]
 [   9    4    9    4    7   19  902    1    3    0]
 [   2    8   22    7    6    2    0  947    3   31]
 [   9   12    4   23    8   27    9   11  856   15]
 [   6    7    2   10   22    8    0   24    7  923]]"
mnist,0,0,0,0,DecisionTreeClassifier,DecisionTreeClassifier(random_state=42),20.91111445,0.6456,0.6439,0.6456,0.6456,0.6456,"[[925   1   8   3   2  11  13   4   9   4]
 [  0 982  28  47   6  27   6  11  28   0]
 [ 25  15 815  55  20  19  11  21  46   5]
 [  9   8  31 839   4  61   6  17  20  15]
 [ 26  36  54  57 275 140  51  43 210  90]
 [ 20  10  14  36   3 743  28   3  26   9]
 [ 90   5 126  12  59  79 372   7 185  23]
 [ 89  12 105 143  10  70  11 460  19 109]
 [ 12  12  41  51  33  51  16   9 704  45]
 [ 39  24  47 126  99 114  24  22 173 341]]"
mnist,0,0,0,0,RandomForestClassifier,"RandomForestClassifier(n_jobs=-1, random_state=42)",8.805366278,0.9586,0.9585,0.9586,0.9586,0.9586,"[[ 970    0    0    0    0    3    4    1    2    0]
 [   0 1118    3    3    0    4    3    0    4    0]
 [   7    0  988    7    2    2    3    7   16    0]
 [   2    0    7  963    0   20    0    4   13    1]
 [   2    0    1    1  942    4    9    0   10   13]
 [   6    0    1   14    0  861    4    1    5    0]
 [  13    3    0    0    6    9  920    0    7    0]
 [   6    3   23    8    4    6    0  957    8   13]
 [   5    0    5   10    4    7    1    2  936    4]
 [  13    5    2   15   15   14    0    1   13  931]]"
mnist,0,0,0,0,ExtraTreesClassifier,"ExtraTreesClassifier(n_jobs=-1, random_state=42)",6.41937685,0.972,0.9719,0.972,0.972,0.972,"[[ 968    0    1    0    0    3    4    1    3    0]
 [   0 1125    2    3    0    1    3    0    1    0]
 [   6    0  996    6    2    1    4   12    5    0]
 [   1    0    6  978    0    8    0    7    6    4]
 [   1    0    2    0  957    0    5    0    2   15]
 [   5    0    1    5    0  868    7    1    3    2]
 [   8    3    0    0    4    3  938    0    2    0]
 [   2    3   21    2    1    0    0  985    3   11]
 [   5    0    4    6    4    4    2    6  938    5]
 [   5    5    2    8    8    5    1    3    5  967]]"
mnist,0,0,0,0,KNeighborsClassifier,KNeighborsClassifier(),5.922425747,0.9423,0.9415,0.9423,0.9423,0.9423,"[[ 961    1    2    2    1    6    6    1    0    0]
 [   0 1128    3    0    0    0    3    0    1    0]
 [  15   13  951   23    4    0    7    8   10    1]
 [   0    3    4  961    3   13    0   11   11    4]
 [   1   10    6    3  922    2    5    4    3   26]
 [   6    1    2   26    8  818   16    2    6    7]
 [  11    4    1    0    2    7  931    0    2    0]
 [   0   21   11    4    7    2    0  953    1   29]
 [  13    2    8   18   11   28    3    6  878    7]
 [   6    5    4   11   19    6    0   33    5  920]]"
mnist,0,0,0,0,GaussianNB,GaussianNB(),1.401483059,0.1077,0.1046,0.1077,0.1077,0.1077,"[[   0    1  979    0    0    0    0    0    0    0]
 [   0    0 1135    0    0    0    0    0    0    0]
 [   0    0 1030    1    0    0    1    0    0    0]
 [   0    2  996    6    5    0    0    0    0    1]
 [   0    1  972    0    8    0    0    1    0    0]
 [   0    0  824    1   60    6    0    0    0    1]
 [   0    0  945    0    3    7    3    0    0    0]
 [   0   15  355   66  513    8    0   13    0   58]
 [   0    1  947    3   17    6    0    0    0    0]
 [   0   15  688   23  270    2    0    0    0   11]]"
mnist,0,0,0,0,LinearSVC,LinearSVC(random_state=42),470.1085737,0.9125,0.9115,0.9125,0.9125,0.9125,"[[ 956    0    3    1    3    6    6    3    1    1]
 [   0 1113    4    3    0    1    4    2    8    0]
 [  13   17  892   30    9    5   14   14   35    3]
 [   6    3   15  917    2   21    6   10   22    8]
 [   1    4    8    7  914    0    7    4    8   29]
 [  11    1    2   31    9  781   17    8   26    6]
 [  10    4    7    2    9   20  904    0    2    0]
 [   2   12   22    8   10    3    1  937    5   28]
 [  14   14    9   24   13   37   12   10  828   13]
 [   7   11    4   16   39   11    0   28   10  883]]"
mnist,0,0,0,0,MLPClassifier,MLPClassifier(random_state=42),46.53086162,0.9758,0.9756,0.9758,0.9758,0.9758,"[[ 969    0    0    0    0    1    4    1    5    0]
 [   0 1125    3    1    0    0    2    1    3    0]
 [   6    5  997    4    1    0    3    5   10    1]
 [   0    0    6  991    0    6    1    2    1    3]
 [   6    1    5    0  950    0    3    3    2   12]
 [   2    0    0   10    1  870    4    0    3    2]
 [   5    1    5    0    4    3  937    0    3    0]
 [   2    4   13    0    2    0    0  998    1    8]
 [   2    0    3    7    5    3    3    3  943    5]
 [   3    4    0    3    8    4    0    5    4  978]]"
mnist,0,0,0,0,LinearDiscriminantAnalysis,LinearDiscriminantAnalysis(),14.59617805,0.873,0.8717,0.873,0.873,0.873,"[[ 939    0    1    4    2   13   10    1    9    1]
 [   0 1095    3    3    2    2    4    0   26    0]
 [  15   30  825   34   21    5   32    9   55    6]
 [   5    6   25  880    4   27    3   16   29   15]
 [   0   12    7    0  889    3    7    2   10   52]
 [   9    7    5   46   13  732   15   10   36   19]
 [  12    8   11    0   27   29  855    0   16    0]
 [   2   29   13   10   23    1    0  867    3   80]
 [   7   26    7   27   20   54   10    6  791   26]
 [   9    7    1   13   62    6    0   42   12  857]]"
mnist,0,0,0,0,QuadraticDiscriminantAnalysis,QuadraticDiscriminantAnalysis(),9.742655993,0.1111,0.1079,0.1111,0.1111,0.1111,"[[   3    0  972    3    2    0    0    0    0    0]
 [   0    0 1135    0    0    0    0    0    0    0]
 [   0    0 1029    2    0    0    1    0    0    0]
 [   1   22  966   19    1    0    0    0    0    1]
 [  10   13  944    8    5    0    0    2    0    0]
 [  35   21  759    8   63    5    0    0    0    1]
 [   3    0  937    0    8    2    8    0    0    0]
 [   0   58  274  572    1   24    0   27    0   72]
 [  15    9  919    5   18    7    0    0    0    1]
 [   0   37  643  295    2   17    0    0    0   15]]"
mnist,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",17.75730491,0.9616,0.9614,0.9616,0.9616,0.9616,"[[ 969    0    0    0    0    3    0    1    6    1]
 [   1 1115    4    3    0    2    2    1    7    0]
 [   5    0  992   11    4    0    0    9    9    2]
 [   2    0    5  970    0   14    0    8   11    0]
 [   0    0    2    1  940    1    5    1    5   27]
 [   4    0    1   12    0  858    3    3    8    3]
 [  16    2    2    0   10   15  902    0   11    0]
 [   1    5   22    6    1    1    0  966    8   18]
 [   4    1    3    2    3    4    2    1  944   10]
 [   7    5    1    9   10    5    0    5    7  960]]"
mnist,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=10, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",2.962773323,0.8962,0.894,0.8962,0.8962,0.8962,"[[ 958    0    1    1    1    2    3    1   12    1]
 [   1 1074   15   10    1    1    6    3   24    0]
 [  16    4  910   21   16    1    4   15   39    6]
 [   7    1   25  909    2    5    4   15   29   13]
 [   2    4    3    4  867    3    8    5   18   68]
 [  18    7    5   74   14  657   21   14   47   35]
 [   9    1    1    0   17   12  880    0   38    0]
 [   0    5   30    4    6    1    0  932   12   38]
 [   8    8   14   13    9    8    8    8  873   25]
 [   9    4    3   24   31    8    0   16   12  902]]"
mnist,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=10, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",3.739172459,0.8829,0.8808,0.8829,0.8829,0.8829,"[[ 960    1    0    0    1    2    4    1   11    0]
 [   1 1089    4   10    1    2    7    0   21    0]
 [  27   11  861   35   18    3    8   11   57    1]
 [  10    1   18  903    5   10    4   12   33   14]
 [   3    4    3    7  897    3    5    2   18   40]
 [  21    5    5  101   18  644   23   11   41   23]
 [  16    5    5    1   16   15  869    0   31    0]
 [   6    7    9   36   13    3    0  873   17   64]
 [   8    7    9   23   12   10    6    5  871   23]
 [  11    5    8   31   45   13    0   19   15  862]]"
mnist,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=25, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",5.277438641,0.9246,0.9238,0.9246,0.9246,0.9246,"[[ 964    0    0    1    0    4    2    1    7    1]
 [   1 1100    8    2    0    6    6    2   10    0]
 [  13    0  943   16   13    1    8   12   22    4]
 [   7    1   18  917    0   22    2   12   23    8]
 [   1    1    2    1  897    9    7    1   13   50]
 [  14    1    2   29    7  790   10    6   19   14]
 [  12    1    1    0   13   24  888    0   19    0]
 [   1    7   33    3    5    4    0  934   12   29]
 [   6    5    7   10    5   13    6    4  897   21]
 [  11    7    2   15   25   16    1    8    8  916]]"
mnist,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=25, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",7.67763114,0.8866,0.8844,0.8866,0.8866,0.8866,"[[ 961    1    0    0    1    4    3    1    9    0]
 [   1 1098    5   10    1    2    8    0   10    0]
 [  25   10  881   28   13    2   11    7   54    1]
 [  10    0   24  908    4    7    4   11   26   16]
 [   2    2    2    6  906    3    5    3   16   37]
 [  19    6    2   98   18  656   20   11   37   25]
 [  21    0    6    1   22   15  859    0   34    0]
 [   6   11   15   31   10    5    0  861   19   70]
 [   9    7    8   21   17   11    6    6  869   20]
 [   8    5   13   35   38    9    0   15   19  867]]"
mnist,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=50, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",9.59829855,0.9461,0.9458,0.9461,0.9461,0.9461,"[[ 968    0    0    0    0    2    3    1    6    0]
 [   1 1107    6    3    0    2    5    2    9    0]
 [  10    0  969   11    8    1    4   11   14    4]
 [   2    0   15  942    0   20    2    7   15    7]
 [   1    0    3    1  912    4    7    1   10   43]
 [   8    0    2   17    0  837    6    4   14    4]
 [  13    2    1    0   10   10  910    0   12    0]
 [   1    3   27    6    4    3    0  951    9   24]
 [   6    2    6    6    2    8    5    3  921   15]
 [  11    8    2   11   16    8    0    4    5  944]]"
mnist,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=50, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",14.70161963,0.89,0.8881,0.89,0.89,0.89,"[[ 958    2    1    0    1    2    3    2   11    0]
 [   1 1099    5   10    1    0    7    0   11    1]
 [  30   10  870   28   16    1   12    6   58    1]
 [  11    0   18  909    3   10    4   12   28   15]
 [   3    2    3    7  905    4    5    2   14   37]
 [  18    6    2   79   16  675   24    9   37   26]
 [  19    4    5    1   19   14  864    0   32    0]
 [   4   10   13   28    9    3    2  876   20   63]
 [   5    8    8   17   17    9    7    6  875   22]
 [  10    5   11   23   41   10    9   13   18  869]]"
mnist,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",18.14349651,0.9616,0.9614,0.9616,0.9616,0.9616,"[[ 969    0    0    0    0    3    0    1    6    1]
 [   1 1115    4    3    0    2    2    1    7    0]
 [   5    0  992   11    4    0    0    9    9    2]
 [   2    0    5  970    0   14    0    8   11    0]
 [   0    0    2    1  940    1    5    1    5   27]
 [   4    0    1   12    0  858    3    3    8    3]
 [  16    2    2    0   10   15  902    0   11    0]
 [   1    5   22    6    1    1    0  966    8   18]
 [   4    1    3    2    3    4    2    1  944   10]
 [   7    5    1    9   10    5    0    5    7  960]]"
mnist,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=100, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",30.27594113,0.8912,0.8892,0.8912,0.8912,0.8912,"[[ 959    1    0    0    1    3    4    1   11    0]
 [   1 1099    4   10    1    1    7    0   12    0]
 [  27   13  874   27   15    1   10    6   58    1]
 [  11    2   20  909    3    6    4   12   29   14]
 [   2    1    3    3  912    4    5    2   16   34]
 [  18    5    3   88   16  670   22   10   34   26]
 [  16    4    7    1   21   14  863    0   32    0]
 [   4    8   16   26   10    7    0  874   19   64]
 [   6    6    8   18   14    8    7    6  880   21]
 [   7    4   11   21   43   13    0   17   21  872]]"
mnist,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(10, 10),Dropout:0)",102.2769806,0.9322,0.9312,0.9322,0.9322,0.9322,"[[ 952    0    4    2    2    8    4    6    2    0]
 [   0 1109    3    3    0    1    1    3   15    0]
 [  12    4  948   24   11    1    7   10   13    2]
 [   5    3   15  937    1    6    0   12   26    5]
 [   3    1   10    3  912    2    7   10    4   30]
 [   8    3    0   51    3  787    7    5   19    9]
 [  15    4    3    0    7   16  909    0    4    0]
 [   2    9   17    6    4    3    0  961    0   26]
 [   3   12    7   26    7   14    9    6  878   12]
 [   9    8    0   12   19    4    1   19    8  929]]"
mnist,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(25, 25),Dropout:0)",68.75352955,0.9593,0.9589,0.9593,0.9593,0.9593,"[[ 966    0    3    0    1    4    0    1    2    3]
 [   2 1118    5    2    0    1    1    1    5    0]
 [   6    5  985   11    3    2    4    6    9    1]
 [   0    1    9  971    2    9    1    4    8    5]
 [   2    1    3    1  943    3    8    5    3   13]
 [   2    2    1   18    1  841    9    2   12    4]
 [   8    3    6    1    5   11  920    0    4    0]
 [   2    9    8    8    5    0    0  973    5   18]
 [   5    4    5    9    7   10    3    3  923    5]
 [   2    4    0   12   18    6    1    6    7  953]]"
mnist,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(50, 50),Dropout:0)",127.2051041,0.9714,0.971,0.9714,0.9714,0.9714,"[[ 964    0    0    1    2    1    3    4    3    2]
 [   0 1125    2    1    0    2    1    1    3    0]
 [   4    3  998    7    4    0    1    9    6    0]
 [   0    0    9  973    0    9    0    5    9    5]
 [   2    1    5    0  955    1    1    3    1   13]
 [   3    1    0   23    1  855    3    1    4    1]
 [   6    2    0    1    8    9  930    0    2    0]
 [   1    7   10    2    4    0    0  995    2    7]
 [   3    2    3    5    5    7    1    6  938    4]
 [   0    2    0    4    8    4    1    5    4  981]]"
mnist,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(100, 100),Dropout:0)",127.8432465,0.9776,0.9774,0.9776,0.9776,0.9776,"[[ 971    1    0    0    1    2    2    1    2    0]
 [   0 1125    1    2    0    1    2    1    3    0]
 [   4    5 1002    2    2    1    1    5    9    1]
 [   0    0    6  989    0    2    0    3    5    5]
 [   1    2    9    2  955    0    2    4    1    6]
 [   2    0    1    9    2  868    3    2    4    1]
 [   5    3    3    1    6    6  929    0    5    0]
 [   1    3    9    2    2    0    0 1001    3    7]
 [   3    1    2    3    2    6    3    4  947    3]
 [   1    2    1    8    5    1    0    1    1  989]]"
mnist,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(10, 10, 10),Dropout:0)",107.1422825,0.9336,0.9324,0.9336,0.9336,0.9336,"[[ 953    0    4    2    3    5    6    3    2    2]
 [   0 1116    2    4    0    5    1    3    3    1]
 [  14   10  940   27    5    0    5   15   16    0]
 [   0    0   14  942    2   14    2   16   16    4]
 [   3    7    7    0  909    2   13    7    4   30]
 [   7    9    0   42    4  775   11    8   28    8]
 [   7    4    2    2   13   12  913    0    5    0]
 [   2    7   13    9    6    1    0  969    0   21]
 [   9   13    5   22    7   14    6    6  881   11]
 [   7    3    1   12   28    4    0   11    5  938]]"
mnist,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(25, 25, 25),Dropout:0)",144.7442961,0.9576,0.957,0.9576,0.9576,0.9576,"[[ 950    0    4    3    1   11    3    1    4    3]
 [   0 1122    3    3    0    1    1    1    4    0]
 [   2   13  982    6    2    2    4   12    9    0]
 [   0    3    5  969    0   10    1    9    8    5]
 [   1    6    5    1  928    3    6    8    0   24]
 [   2    3    1   23    3  839   10    2    6    3]
 [   7    6    3    3    5    9  917    1    7    0]
 [   0   12   10    7    4    3    0  978    2   12]
 [   3    2    4    7    5   12    3    4  926    8]
 [   3    6    0   11   11    2    1    8    2  965]]"
mnist,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(50, 50, 50),Dropout:0)",163.0802839,0.9721,0.9719,0.9721,0.9721,0.9721,"[[ 962    1    0    3    2    2    1    3    4    2]
 [   0 1122    2    4    0    2    1    0    4    0]
 [   5    1  992    5    4    0    3    9   13    0]
 [   0    0    4  981    1    4    0    9    5    6]
 [   1    0    4    3  953    1    4    2    2   12]
 [   2    0    0   17    1  859    4    2    3    4]
 [   6    2    2    0    3    3  939    0    3    0]
 [   0    4    7    4    3    1    1  997    1   10]
 [   3    4    2    7    5    7    0    4  939    3]
 [   1    3    0    6   10    4    0    5    3  977]]"
mnist,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(100, 100, 100),Dropout:0)",139.0880504,0.9771,0.9768,0.9771,0.9771,0.9771,"[[ 969    1    1    2    1    1    1    3    1    0]
 [   0 1124    1    2    0    2    2    0    4    0]
 [   0    3 1003    2    3    0    4    7    9    1]
 [   1    0    2  995    0    2    1    3    5    1]
 [   3    0    2    2  953    2    5    2    0   13]
 [   2    0    0   17    2  860    4    1    5    1]
 [   5    3    2    1    4    4  937    0    2    0]
 [   3    3    5    2    1    1    0  998    3   12]
 [   1    2    2    1    4    6    1    6  951    0]
 [   2    3    0    6    4    3    0    7    3  981]]"
mnist,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",188.3948243,0.9833,0.9831,0.9833,0.9833,0.9833,"[[ 975    0    1    1    0    1    1    1    0    0]
 [   0 1130    1    1    0    0    1    1    1    0]
 [   3    2 1007    4    1    0    1    7    7    0]
 [   0    0    3  998    0    1    0    3    5    0]
 [   0    0    2    0  973    0    2    1    0    4]
 [   1    0    0   12    0  871    5    1    1    1]
 [   6    3    1    1    2    3  940    0    2    0]
 [   2    3    7    1    0    0    0 1011    2    2]
 [   3    0    3    3    2    6    0    4  948    5]
 [   2    1    0    7   11    1    0    6    1  980]]"
mnist,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",215.031729,0.9853,0.9851,0.9853,0.9853,0.9853,"[[ 975    1    0    2    0    0    1    0    1    0]
 [   0 1132    1    1    0    0    1    0    0    0]
 [   2    0 1014    1    1    0    1    6    6    1]
 [   0    0    2  998    0    5    0    1    3    1]
 [   1    0    1    1  964    0    1    2    1   11]
 [   2    0    0    7    0  878    1    1    2    1]
 [   4    2    2    1    4    8  935    0    2    0]
 [   2    1    6    1    2    0    0 1009    1    6]
 [   3    0    1    2    2    6    0    2  954    4]
 [   1    0    2    3    4    3    0    2    0  994]]"
cifar10,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=2, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",9.201295614242554,0.3583,0.3583,0.3583,0.3583,0.3583,"[[456  45  64  15  45  25  32  35 213  70]
 [ 52 379  24  56  50  54  61  35  97 192]
 [111  51 225  60 174  72 160  74  47  26]
 [ 52  57  87 158 102 159 194  72  48  71]
 [ 53  35 115  39 335  56 229  82  33  23]
 [ 50  36  93 113 131 298 112  68  50  49]
 [ 22  64  74  53 170  64 459  34  23  37]
 [ 61  46  63  69 147  98  79 271  53 113]
 [101  89  34  26  27  37  34  20 527 105]
 [ 50 147  23  45  27  39  41  65  88 475]]"
cifar10,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=2, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",14.351992130279541,0.3632,0.3632,0.3632,0.3632,0.3632,"[[441  41  79  38  44  27  29  41 202  58]
 [ 60 377  42  54  47  43  68  42  70 197]
 [102  37 266  87 151  66 161  56  44  30]
 [ 52  52  92 188  98 169 175  58  51  65]
 [ 53  35 147  50 297  62 232  72  27  25]
 [ 36  38 118 135  97 304 100  80  50  42]
 [ 21  55  98  59 150  49 472  48  17  31]
 [ 61  35  69  73 130  92  91 318  43  88]
 [109  85  25  34  30  32  43  24 527  91]
 [ 61 166  28  41  29  28  52  50 103 442]]"
cifar10,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=4, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",11.579730033874512,0.3742,0.3742,0.3742,0.3742,0.3742,"[[469  46  61  27  33  27  33  35 203  66]
 [ 45 403  21  41  53  52  46  41  93 205]
 [100  48 220  69 189  71 171  50  49  33]
 [ 59  60  75 169 113 160 192  61  43  68]
 [ 51  25 106  31 338  66 244  74  38  27]
 [ 42  38  89 114 127 325 109  75  43  38]
 [ 15  52  81  53 163  57 484  37  19  39]
 [ 50  34  36  56 149  86  90 322  48 129]
 [114  94  23  34  21  36  30  25 519 104]
 [ 60 153  21  26  30  32  52  48  85 493]]"
cifar10,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=4, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",21.161224842071533,0.3921,0.3921,0.3921,0.3921,0.3921,"[[474  45  63  30  37  28  28  34 206  55]
 [ 50 428  36  44  32  44  49  36  73 208]
 [ 85  41 290  82 151  71 164  64  29  23]
 [ 53  40  92 199  98 183 193  52  34  56]
 [ 47  32 146  53 324  51 219  73  32  23]
 [ 35  36 103 108 114 346 101  75  41  41]
 [ 16  55  94  53 150  52 497  37  12  34]
 [ 57  39  52  66 132 101  85 334  35  99]
 [105  80  15  38  30  27  35  18 560  92]
 [ 50 176  25  42  20  29  51  49  89 469]]"
cifar10,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=8, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",16.360148429870605,0.3905,0.3905,0.3905,0.3905,0.3905,"[[470  38  66  19  40  24  27  31 220  65]
 [ 46 431  15  41  45  41  57  34  80 210]
 [ 87  64 245  50 168  69 183  57  41  36]
 [ 47  45  70 166 118 171 207  67  37  72]
 [ 51  28 131  29 328  54 261  66  27  25]
 [ 32  38  91 125 121 333 124  62  32  42]
 [ 17  49  80  49 152  56 518  31  12  36]
 [ 53  40  52  62 136  77  87 324  48 121]
 [102  91  26  28  23  35  22  20 567  86]
 [ 52 141  18  24  31  21  52  34 104 523]]"
cifar10,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=8, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",35.20192837715149,0.4244,0.4244,0.4244,0.4244,0.4244,"[[498  35  60  30  35  18  29  28 208  59]
 [ 38 465  21  43  26  49  51  30  74 203]
 [ 87  31 310  80 147  68 169  52  33  23]
 [ 48  32  87 237  96 189 173  42  37  59]
 [ 52  26 127  45 362  50 207  78  31  22]
 [ 30  32  94 126 108 369 104  78  28  31]
 [ 12  45  84  63 147  45 531  29  11  33]
 [ 52  31  45  65 125  90  69 380  40 103]
 [ 93  96  18  27  27  27  26  19 585  82]
 [ 41 174  21  37  24  26  43  47  80 507]]"
cifar10,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=16, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",26.60082221031189,0.3966,0.3966,0.3966,0.3966,0.3966,"[[480  39  66  24  40  24  26  21 217  63]
 [ 48 418  19  33  49  48  48  30  70 237]
 [ 94  50 231  60 175  73 178  62  48  29]
 [ 46  42  74 177  96 172 213  62  37  81]
 [ 50  27 125  31 345  49 238  76  33  26]
 [ 28  40  93 114 121 347 114  65  33  45]
 [ 16  45  75  49 162  48 536  22  10  37]
 [ 55  42  54  55 137  83  74 336  41 123]
 [ 96 102  19  37  18  39  23  22 559  85]
 [ 50 152  14  24  27  37  47  25  87 537]]"
cifar10,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=16, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",66.267733335495,0.4502,0.4502,0.4502,0.4502,0.4502,"[[520  30  61  23  39  19  31  24 198  55]
 [ 33 495  16  37  27  45  41  27  75 204]
 [ 87  33 333  89 142  67 145  52  29  23]
 [ 43  28  93 250  76 194 179  46  30  61]
 [ 48  16 146  45 375  52 196  66  33  23]
 [ 29  23  98 128  90 407  99  69  30  27]
 [ 10  33  87  58 130  45 575  21   8  33]
 [ 52  24  40  73 118  89  66 407  32  99]
 [ 91  81  13  32  23  27  21  20 611  81]
 [ 49 167  22  34  14  24  38  47  76 529]]"
cifar10,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=32, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",46.91800355911255,0.4028,0.4028,0.4028,0.4028,0.4028,"[[479  38  60  19  47  20  33  19 213  72]
 [ 52 434  16  38  47  46  41  32  73 221]
 [ 97  53 246  53 168  72 185  57  35  34]
 [ 50  41  70 181 105 168 222  52  34  77]
 [ 49  22 119  27 357  52 246  68  32  28]
 [ 29  41  98 102 123 363 114  64  28  38]
 [ 17  48  76  45 155  51 531  27  12  38]
 [ 50  41  45  51 144  78  85 337  45 124]
 [103 100  23  35  17  34  24  19 553  92]
 [ 45 151  22  21  29  28  39  32  86 547]]"
cifar10,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=32, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",127.19531726837158,0.478,0.478,0.478,0.478,0.478,"[[550  27  59  23  40  20  26  24 181  50]
 [ 30 530  22  43  23  33  38  30  69 182]
 [ 82  30 345  94 148  66 143  50  24  18]
 [ 42  20  88 293  72 181 179  41  25  59]
 [ 48  10 149  44 394  51 188  66  30  20]
 [ 29  16  94 145  88 413  91  65  32  27]
 [ 12  26  77  60 109  38 623  21   9  25]
 [ 47  26  41  77 102  89  57 445  28  88]
 [ 93  79  17  31  20  20  19  17 630  74]
 [ 54 148  20  41  15  31  33  38  63 557]]"
cifar10,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=64, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",88.02795672416687,0.405,0.405,0.405,0.405,0.405,"[[479  40  63  19  45  25  26  23 212  68]
 [ 49 438  19  29  44  50  49  30  64 228]
 [100  54 241  60 169  67 184  59  33  33]
 [ 50  38  68 180 111 168 216  58  34  77]
 [ 55  25 114  25 355  55 244  72  29  26]
 [ 31  38  99 108 125 357 113  64  26  39]
 [ 17  54  71  40 149  50 545  25  12  37]
 [ 53  37  45  50 139  84  80 344  40 128]
 [ 97  99  15  33  17  36  26  25 564  88]
 [ 48 148  20  24  28  28  40  31  86 547]]"
cifar10,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=64, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",240.5353422164917,0.5057,0.5057,0.5057,0.5057,0.5057,"[[579  26  57  24  45  16  22  23 164  44]
 [ 30 567  12  43  13  31  36  31  57 180]
 [ 84  23 365  87 152  61 137  52  22  17]
 [ 42  14  80 326  60 184 166  40  23  65]
 [ 52   4 133  53 425  50 175  68  26  14]
 [ 31  14  86 163  86 418  80  75  26  21]
 [  9  23  69  73  90  40 645  22   7  22]
 [ 41  18  35  82  99  78  48 503  20  76]
 [102  74  17  29  15  21  17  16 648  61]
 [ 51 150  17  41  14  22  33  35  56 581]]"
cifar10,0,0,0,0,XGBRFClassifier,"XGBRFClassifier(base_score=None, booster=None, callbacks=None,
                colsample_bylevel=None, colsample_bytree=None, device='cuda',
                early_stopping_rounds=None, enable_categorical=False,
                eval_metric=None, feature_types=None, gamma=None,
                grow_policy=None, importance_type=None,
                interaction_constraints=None, learning_rate=0.1, max_bin=None,
                max_cat_threshold=None, max_cat_to_onehot=None,
                max_delta_step=None, max_depth=None, max_leaves=None,
                min_child_weight=None, missing=nan, monotone_constraints=None,
                multi_strategy=None, n_estimators=128, n_jobs=-1,
                num_parallel_tree=None, objective='multi:softprob',
                random_state=None, ...)",171.16612434387207,0.4066,0.4066,0.4066,0.4066,0.4066,"[[490  42  58  22  44  15  26  30 209  64]
 [ 49 435  19  35  51  39  42  33  65 232]
 [102  57 245  51 166  68 184  58  35  34]
 [ 53  47  67 169 106 168 226  54  33  77]
 [ 55  28 114  28 360  47 242  73  28  25]
 [ 26  36  97 119 122 353 113  62  31  41]
 [ 16  37  69  43 154  54 551  24   8  44]
 [ 46  41  45  52 134  87  79 344  42 130]
 [ 98  96  21  25  19  36  28  23 564  90]
 [ 47 148  21  22  27  25  39  31  85 555]]"
cifar10,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=8, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=128, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",446.479914188385,0.5385,0.5385,0.5385,0.5385,0.5385,"[[604  25  57  20  41  15  26  23 148  41]
 [ 28 621   9  38  10  27  25  29  53 160]
 [ 80  20 405  89 144  62 115  54  17  14]
 [ 36  14  78 375  57 172 154  42  21  51]
 [ 51   5 128  50 456  51 156  70  21  12]
 [ 28   9  73 170  76 448  85  64  23  24]
 [  8  16  62  68  89  41 673  20   7  16]
 [ 37  14  32  85  87  78  42 540  16  69]
 [ 98  65  16  27  20  24  15  13 659  63]
 [ 51 141  14  41  14  21  28  30  56 604]]"
cifar10,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=10, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=256, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",1428.1836924552917,0.5613,0.5613,0.5613,0.5613,0.5613,"[[635  23  51  21  29  14  31  18 136  42]
 [ 31 642  12  36  14  20  25  17  56 147]
 [ 69  19 422  96 133  51 120  54  20  16]
 [ 30  17  84 375  54 173 154  41  18  54]
 [ 48   9 118  62 487  36 144  63  21  12]
 [ 21  11  67 184  66 462  77  63  25  24]
 [  4  14  54  61  71  35 720  15  10  16]
 [ 32  20  30  73  91  72  40 558  14  70]
 [ 83  71  15  25  14  16  16  15 695  50]
 [ 46 141   9  44   9  20  29  30  55 617]]"
cifar10,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=10, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=512, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",1865.3387532234192,0.5769,0.5769,0.5769,0.5769,0.5769,"[[647  24  48  21  26  15  29  17 129  44]
 [ 29 667  11  33  11  17  21  17  55 139]
 [ 71  19 438  94 123  49 114  58  19  15]
 [ 28  17  80 401  53 173 139  40  22  47]
 [ 43   7 129  62 485  40 136  68  20  10]
 [ 22  11  65 193  59 478  66  58  24  24]
 [  4  15  54  64  67  30 726  16   9  15]
 [ 30  18  34  70  80  73  36 578  13  68]
 [ 80  72  12  22  13  15  12  15 713  46]
 [ 40 144   8  35   8  24  23  29  53 636]]"
coarse,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=10, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=2, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",32.999507665634155,0.2381,0.2381,0.2381,0.2381,0.2381,"[[109  41   4  18   9  10   9  27  24  21  40  33  26  11   6  16  34  24
   18  20]
 [ 51 120  25  15  17  15  14   6  29  18  23  11  24  23  17  27  23  11
   19  12]
 [  6   9 203  16  61  11  19  27  18  12  11  11  17  19  17   4  11  14
    8   6]
 [ 16  22  15 127  26  26  32  25  15  13  16  23  12  12  26  24  24  12
   21  13]
 [  7  16  62  19 167  12  22  26  21   8   4  17  20  18  19   8  17  13
    9  15]
 [ 18  18  20  47  20  61  35  24  22  22  27  22  25  15  25  22  27  12
   21  17]
 [ 12  21  21  23  30  17 103  21  33  16  13  17  22  12  25  19  37  20
   20  18]
 [ 25  18  31  20  23   3  14 113  25   7  10  36  34  29  13  25  41  11
   11  11]
 [ 22  20  15  10  12  11  17  31  87  11  14  39  48  20  26  23  48  17
   21   8]
 [ 22  22   6  12   2   2  12   6   3 187  84  16   5   6   7   7  16  45
   23  17]
 [ 22  15   8   5   7   7  11   8  17  67 228  12  16   9   5  13  15  21
    6   8]
 [ 18  14   4  16  16   8  15  34  40  22  18  83  30  29  18  17  32  36
   28  22]
 [ 32  16   9  10  12  15  12  22  50  16  14  27  99  22  21  30  50   9
   18  16]
 [ 26  16  29  23  19  16  34  39  38  15  21  18  31  47  23  28  36  14
   12  15]
 [ 17  13  23  35  26  22  31  14  42  19  15  26  26  18  95  13  28  14
   11  12]
 [ 28  37   3  27   7  16  32  24  39  15  14  27  42  33  12  61  35  18
   15  15]
 [ 11  14   9  26  18  11  25  30  42  17  13  41  49  27  28  26  79  16
   11   7]
 [ 14  10  14  12   4  11   9  19  23  38  18  14   8   7   6   8  10 237
   13  25]
 [ 26   9  14  14  12  11  23  16  17  53  31  30  19  13  22  16  26  42
   70  36]
 [ 20  14  12  17  14  14  12  11  18  42  37  26  28   9  10  19  17  29
   46 105]]"
coarse,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=10, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=2, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",31.8396999835968,0.2381,0.2381,0.2381,0.2381,0.2381,"[[109  41   4  18   9  10   9  27  24  21  40  33  26  11   6  16  34  24
   18  20]
 [ 51 120  25  15  17  15  14   6  29  18  23  11  24  23  17  27  23  11
   19  12]
 [  6   9 203  16  61  11  19  27  18  12  11  11  17  19  17   4  11  14
    8   6]
 [ 16  22  15 127  26  26  32  25  15  13  16  23  12  12  26  24  24  12
   21  13]
 [  7  16  62  19 167  12  22  26  21   8   4  17  20  18  19   8  17  13
    9  15]
 [ 18  18  20  47  20  61  35  24  22  22  27  22  25  15  25  22  27  12
   21  17]
 [ 12  21  21  23  30  17 103  21  33  16  13  17  22  12  25  19  37  20
   20  18]
 [ 25  18  31  20  23   3  14 113  25   7  10  36  34  29  13  25  41  11
   11  11]
 [ 22  20  15  10  12  11  17  31  87  11  14  39  48  20  26  23  48  17
   21   8]
 [ 22  22   6  12   2   2  12   6   3 187  84  16   5   6   7   7  16  45
   23  17]
 [ 22  15   8   5   7   7  11   8  17  67 228  12  16   9   5  13  15  21
    6   8]
 [ 18  14   4  16  16   8  15  34  40  22  18  83  30  29  18  17  32  36
   28  22]
 [ 32  16   9  10  12  15  12  22  50  16  14  27  99  22  21  30  50   9
   18  16]
 [ 26  16  29  23  19  16  34  39  38  15  21  18  31  47  23  28  36  14
   12  15]
 [ 17  13  23  35  26  22  31  14  42  19  15  26  26  18  95  13  28  14
   11  12]
 [ 28  37   3  27   7  16  32  24  39  15  14  27  42  33  12  61  35  18
   15  15]
 [ 11  14   9  26  18  11  25  30  42  17  13  41  49  27  28  26  79  16
   11   7]
 [ 14  10  14  12   4  11   9  19  23  38  18  14   8   7   6   8  10 237
   13  25]
 [ 26   9  14  14  12  11  23  16  17  53  31  30  19  13  22  16  26  42
   70  36]
 [ 20  14  12  17  14  14  12  11  18  42  37  26  28   9  10  19  17  29
   46 105]]"
coarse,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=10, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=4, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",68.89496326446533,0.2655,0.2655,0.2655,0.2655,0.2655,"[[123  45   3  15   7   8  11  27  24  18  34  27  29  10   7  22  33  24
   16  17]
 [ 60 121  24  17  18  10   9  13  28  19  23  11  32  17  15  24  21  13
   13  12]
 [  5  12 235  19  53   7  13  28  19  13   9  10  10  15  20   3   8  13
    2   6]
 [ 11  16  14 152  21  34  35  13  21  12  16  21  16  15  26  14  21  11
   19  12]
 [  7  12  64  15 194   6  25  35  26   5   5  16  23   9  14   5   7  12
   11   9]
 [ 23  13  15  51  18  71  31  15  23  12  31  19  28  13  32  20  35  12
   21  17]
 [ 15  15  23  27  28  19 116  17  36  17  18  18  21  11  21  13  27  22
   19  17]
 [ 24  17  32  15  30   9  13 128  22   8   2  41  24  33  17  21  33  10
    9  12]
 [ 23  15  14   8  12  11  16  27 101  13   9  43  50  15  31  16  47  21
   22   6]
 [ 24  18   3   8   3   3  10   5  10 195  82  13   6   8   9   7  16  44
   18  18]
 [ 22  14   6   5   7   9  11   8  13  68 241  10  15   7   4  11  12  21
    6  10]
 [ 21  11   4  15  14   9  17  26  45  26  15  98  33  14  14  20  32  33
   29  24]
 [ 32  20   8   8   9   9  18  19  43   9  10  34 107  22  27  25  58   9
   20  13]
 [ 24  11  29  26  20  12  33  36  37  14  20  23  38  53  22  31  39  12
    8  12]
 [ 15  16  23  31  23  22  31  15  36  12   9  28  22  19 119  10  32  13
   11  13]
 [ 25  36   4  29   8  19  28  26  47  16  12  36  34  28  18  54  36  17
   12  15]
 [ 17   9   7  26  10  13  24  27  49  19  19  33  47  21  28  27  94  12
   11   7]
 [ 13   7  11  12   8   6  10  14  19  38  15  16  12   3   6   9   8 260
   10  23]
 [ 24  11  12  14  18  13  19  14  13  57  25  29  25  10  19  14  19  45
   80  39]
 [ 20  10   7  14  13  16  15  13  14  52  39  25  24   5  17  14  15  22
   52 113]]"
coarse,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=10, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=8, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",582.3718967437744,0.2904,0.2904,0.2904,0.2904,0.2904,"[[142  42   1  16   1   8   8  25  23  16  29  26  32  12   8  22  29  22
   16  22]
 [ 57 136  26  15  16  11  18  12  22  16  18  13  32  17  17  19  22  12
   11  10]
 [  4   7 245  20  53   9  13  26  19  13   3   9   7  19  27   5   7   6
    3   5]
 [ 19  15  13 155  19  30  39  12  24  10  14  19  21  21  25  16  16  10
   15   7]
 [  5   8  62  19 200   9  20  29  24   3   6  13  20  17  13   6  12  13
   12   9]
 [ 24  10  14  51  14  92  40  20  16   9  30  20  21  15  23  25  31  13
   20  12]
 [  7  11  18  25  26  19 139  16  33  18  21  17  16  16  18  18  32  14
   19  17]
 [ 22  15  38  13  23  11  11 144  24   8   1  33  27  30  10  21  41  13
    5  10]
 [ 19  14  11  10  11  15  14  19 102  10   9  49  62  20  27  23  54  14
   13   4]
 [ 19  14   2   8   1   1  12   1   9 213  81  15   7   5   8   9  16  41
   11  27]
 [ 24  13   6   4   9  12   5   8  13  57 252   6  13   6   3   9  24  20
   11   5]
 [ 14  11   3  16  10   7  16  29  40  23  13 107  41  12  13  21  38  35
   32  19]
 [ 23  15   6  10  10   7  15  22  44  10   8  29 130  27  21  25  60   6
   18  14]
 [ 24  19  32  19  16  13  23  42  32   7  20  18  39  68  25  38  38  10
    8   9]
 [ 11  10  18  37  15  16  32  15  44  18   9  19  19  20 131  14  37  14
   11  10]
 [ 27  37   4  23  10  14  23  30  50  13  15  30  39  24  11  62  47  15
   15  11]
 [ 14   5   8  27   9  11  25  26  52  13  16  30  55  27  30  27  99  10
    8   8]
 [ 11   7  11   7   9   9   7  15  19  36  13  16   8   6   5   5  11 277
    9  19]
 [ 24  13   9   8  12  13  21   9  11  62  21  32  28  16  15  17  18  41
   89  41]
 [ 21  11   4  14  12  13  12  11  19  47  36  27  33   9   6  17   8  25
   54 121]]"
coarse,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=10, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=16, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",2381.417294025421,0.3202,0.3202,0.3202,0.3202,0.3202,"[[146  48   0  12   2  11  10  20  22  17  27  31  31  13   3  22  38  19
   13  15]
 [ 45 154  24  13  18  12  15   8  28  22  21   8  26  22  17  18  23  11
    9   6]
 [  4  14 263  20  42   8  14  23  25   8   8   8   4  14  15   4  12   7
    3   4]
 [ 11  18  14 169  18  29  28  16  20  12  13  17  19  18  26  18  24  10
   11   9]
 [  7  12  63  17 209   9  19  25  31   4   3  14   9  16  10   8  14  15
    6   9]
 [ 18  13  13  48  17 111  29  14  20  12  30  11  24  20  24  21  35   6
   22  12]
 [  7   9  18  19  27  17 158  11  40  13  19  17  18  22  10  16  32  12
   20  15]
 [ 14  12  23  11  16   7  15 162  33   9   7  38  31  27  13  25  36   8
    7   6]
 [ 22   6   5  12   8   7  16  23 121  10  13  45  64  22  19  22  62   9
    9   5]
 [ 20   9   4   8   3   4  10   4   7 235  81   6   6   7   5  10  12  36
   16  17]
 [ 19  17   6   7   7   5   9   8   9  58 265   9   7   3   3  17  23  16
    8   4]
 [  7   6   4  10   6   8   8  32  43  23  13 123  45  13  12  21  50  34
   25  17]
 [ 24  12  10   7   1   4  13  13  60   8   6  49 147  19  13  21  59   6
   15  13]
 [ 33  19  27  15  21  11  27  42  40   8  17  18  33  66  25  28  45   8
    8   9]
 [  8  11  18  30  14  20  40  10  42  14   7  13  23  21 148  15  34  10
   13   9]
 [ 33  36   1  15   7  12  22  23  55  11  15  21  53  19   9  84  48  13
   15   8]
 [ 15   6   6  24   8   9  23  29  55  10  20  29  56  23  23  29 116   6
    7   6]
 [ 11   4   8   6   8   6  11  17  15  31  16  11  10   4   4   9  13 292
   14  10]
 [ 20   9  12  13   9   8  15   8  11  69  19  21  41  10  13  21  19  36
  108  38]
 [ 11   7   5  14  10   9  10  13  17  44  39  22  31  17   8  17  14  26
   61 125]]"
fine,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=2, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",14.907358169555664,0.1294,0.1294,0.1294,0.1294,0.1294,"[[28  3  0 ...  0  1  0]
 [ 1 19  1 ...  1  2  0]
 [ 0  3  7 ...  3  3  1]
 ...
 [ 0  2  2 ... 13  1  0]
 [ 0  1  2 ...  3  2  1]
 [ 0  1  1 ...  0  0  6]]"
fine,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=4, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",31.079911470413208,0.154,0.154,0.154,0.154,0.154,"[[30  2  1 ...  0  1  0]
 [ 0 25  0 ...  2  2  0]
 [ 1  3  9 ...  2  3  1]
 ...
 [ 0  1  4 ... 13  1  0]
 [ 1  0  3 ...  2  4  2]
 [ 0  1  2 ...  1  0 13]]"
fine,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=8, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",66.44575190544128,0.1739,0.1739,0.1739,0.1739,0.1739,"[[33  4  1 ...  0  2  0]
 [ 0 29  0 ...  3  1  0]
 [ 0  3 13 ...  5  2  1]
 ...
 [ 0  2  3 ... 21  1  0]
 [ 0  0  5 ...  4  5  1]
 [ 0  1  2 ...  0  0 19]]"
fine,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=16, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",127.9477424621582,0.195,0.195,0.195,0.195,0.195,"[[38  2  1 ...  0  1  0]
 [ 3 27  1 ...  4  1  0]
 [ 1  2 12 ...  3  2  2]
 ...
 [ 0  2  2 ... 22  1  0]
 [ 1  1  4 ...  1  7  1]
 [ 0  0  2 ...  1  1 20]]"
fine,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=32, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",259.84711360931396,0.2152,0.2152,0.2152,0.2152,0.2152,"[[43  3  1 ...  0  1  0]
 [ 3 30  0 ...  3  1  1]
 [ 1  1 16 ...  1  3  2]
 ...
 [ 0  1  3 ... 26  1  1]
 [ 0  1  6 ...  2  5  1]
 [ 0  0  2 ...  1  0 24]]"
fine,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=64, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",508.2498404979706,0.2393,0.2393,0.2393,0.2393,0.2393,"[[47  3  1 ...  0  1  0]
 [ 2 36  0 ...  1  1  1]
 [ 1  1 17 ...  3  5  2]
 ...
 [ 0  1  4 ... 28  2  1]
 [ 0  2  6 ...  1  4  0]
 [ 0  1  1 ...  0  0 27]]"
fine,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=128, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",998.1429312229156,0.2631,0.2631,0.2631,0.2631,0.2631,"[[50  3  2 ...  0  0  0]
 [ 1 37  0 ...  1  1  1]
 [ 2  1 18 ...  2  5  2]
 ...
 [ 0  1  1 ... 31  2  1]
 [ 1  1  4 ...  3  6  0]
 [ 0  0  0 ...  1  0 24]]"
fine,0,0,0,0,XGBClassifier,"XGBClassifier(base_score=None, booster=None, callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cuda', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=0.1, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=5, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=256, n_jobs=-1,
              num_parallel_tree=None, objective='multi:softprob', ...)",2009.7715997695923,0.2843,0.2843,0.2843,0.2843,0.2843,"[[57  1  2 ...  0  0  0]
 [ 1 43  1 ...  1  0  1]
 [ 1  1 20 ...  4  4  2]
 ...
 [ 0  1  1 ... 28  1  1]
 [ 1  0  6 ...  2 13  2]
 [ 0  0  0 ...  1  0 29]]"
cifar10,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(2, 2),Dropout:0)",169.0609040260315,0.2733,0.2733,0.2733,0.2733,0.2733,"[[453  42  23  26  25   2  46 129 187  67]
 [ 57 415  19  65  17   6 113  45 103 160]
 [126  30  25  65 148  10 293 259  27  17]
 [ 42  67  41 102 134  18 384 168  15  29]
 [ 68  19  14  52 195  11 360 251  20  10]
 [ 55  42  41  87 171  17 288 259  14  26]
 [ 14  42  11  60 113  12 679  64   2   3]
 [100  34  43  80 151  18 153 358  24  39]
 [309 102  14  41   8   7  29  66 296 128]
 [ 83 344  15  61  15   1 100  37 151 193]]"
cifar10,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(4, 4),Dropout:0)",115.60716009140015,0.3468,0.3468,0.3468,0.3468,0.3468,"[[457  44  56  19  31  31  51  87 176  48]
 [ 35 484  28  35  21  23  86  61  85 142]
 [114  50  75  20 180  66 343 109  33  10]
 [ 23  83  56  70 115 224 312  67  37  13]
 [ 60  19  39  24 244  61 400 129  12  12]
 [ 24  46  40  47 115 341 252  91  34  10]
 [  5  41  31  26  96 107 638  38  11   7]
 [ 54  44  27  23 138  93  89 467  15  50]
 [242 114  36  25   9  49  38  24 413  50]
 [ 81 319  13  23  12  23  72  89  89 279]]"
cifar10,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(8, 8),Dropout:0)",128.07716035842896,0.4049,0.4049,0.4049,0.4049,0.4049,"[[473  48  85  52  41  22  31  68 132  48]
 [ 58 533  20  47  26  32  46  37  63 138]
 [104  34 202 106 148  84 184 104  16  18]
 [ 23  30  91 267  50 192 209  77  25  36]
 [ 57  13  83 101 343  41 217 121  13  11]
 [ 32  27  83 179  66 329 139 101  23  21]
 [  8  16  54 137 123  66 535  39   8  14]
 [ 44  28  53  85 103  86  41 504  13  43]
 [189  90  21  59  18  51  20  13 464  75]
 [ 61 211   9  64  16  27  51  71  91 399]]"
cifar10,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(16, 16),Dropout:0)",116.1565158367157,0.4551,0.4551,0.4551,0.4551,0.4551,"[[510  43  71  42  36  20  32  47 147  52]
 [ 36 554  19  34  23  24  37  29  69 175]
 [ 86  26 269  72 178  89 157  88  21  14]
 [ 34  23  73 277  74 205 207  56  22  29]
 [ 46   5 127  56 423  55 172  83  16  17]
 [ 19  13  72 173 108 370 119  75  30  21]
 [  6   8  60 102 126  59 587  25   7  20]
 [ 39  17  67  65 111  87  60 493  21  40]
 [120  72  28  36  26  36  21  15 584  62]
 [ 62 181  10  36  17  27  41  64  78 484]]"
cifar10,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(32, 32),Dropout:0)",90.10621166229248,0.4765,0.4765,0.4765,0.4765,0.4765,"[[539  45  79  29  46  26  33  45 112  46]
 [ 46 525  20  44  12  27  42  32  60 192]
 [ 65  25 364  90 131  97 120  72  16  20]
 [ 31  23  93 294  62 233 157  46  21  40]
 [ 40  11 163  62 403  52 155  83  15  16]
 [ 22   7  92 200  60 401 120  61  16  21]
 [  4  13  73  99  85  46 627  24  10  19]
 [ 39  13  70  64 103  89  49 513  11  49]
 [115  78  24  40  33  37  22  22 570  59]
 [ 53 169  17  49  14  23  27  60  59 529]]"
cifar10,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(64, 64),Dropout:0)",96.72694420814514,0.5056,0.5056,0.5056,0.5056,0.5056,"[[558  35  88  36  43  18  28  32 112  50]
 [ 47 554  26  33  17  14  26  35  61 187]
 [ 69   7 430 100 125  84  91  65  11  18]
 [ 27  14 100 346  82 167 144  62  19  39]
 [ 37   6 162  67 450  60 116  75  19   8]
 [ 16   9 102 212  75 395  75  87  13  16]
 [ 11  12  91  98 102  51 598  19   5  13]
 [ 32  11  61  81  93  72  30 567   5  48]
 [118  45  23  41  32  31  20  17 600  73]
 [ 40 152  18  47  17  28  28  59  53 558]]"
cifar10,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(128, 128),Dropout:0)",58.74239683151245,0.5154,0.5154,0.5154,0.5154,0.5154,"[[586  34  62  33  51  32  32  28  94  48]
 [ 46 538  29  32  13  12  30  27  69 204]
 [ 77  12 403 100 125  93  97  66  11  16]
 [ 28  15  88 379  75 206 116  52  13  28]
 [ 38   7 132  79 438  69 127  77  19  14]
 [ 10   8  67 235  73 442  70  78   8   9]
 [ 13  12  85  82  82  66 621  18   7  14]
 [ 29   7  62  70  82 112  30 560   9  39]
 [112  55  20  31  28  27  21  21 627  58]
 [ 55 135  21  39  23  29  27  50  61 560]]"
coarse,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(2, 2),Dropout:0)",140.70557379722595,0.1392,0.1392,0.1392,0.1392,0.1392,"[[138  18   6  10   5  89   3  17   1  14  35  11 108   0   1   5   7  10
   13   9]
 [119  14  33   4  21  82   6  17   0  16  26  15  86   1   3   4  10  19
    6  18]
 [  7   2 234   0  83  23   4  44   0   1   5   4  61   0   3   1   7  19
    0   2]
 [ 58   6  19   3  36 112   9  35   2   5   5  21 142   0   2   6   9  14
   10   6]
 [  9   1 202   2  97  10  10  44   0   0   1  14  65   0   8   0  14  17
    3   3]
 [121  13  23   6  25 112   2  21   1   6  11  21  86   1   3   2   9  11
   10  16]
 [ 38   9  49   7  48  56   6  53   0   8   7  29 118   0   8   4  10  23
   13  14]
 [ 19  11  35   5  48  65   8  59   1   4   0  23 165   3   6   6  22  10
    6   4]
 [ 12   8  30   4  39  57  10  51   2   3   1  20 199   2   5   6  19  12
    9  11]
 [ 49  18   3   4   2  24   3   4   0 134  54   9  23   0   1   0   1 137
   16  18]
 [ 69   8  18   3   5  28   6   7   0 107  47  15  34   0   1   3   4 120
    9  16]
 [ 16  13  16   8  22  43   9  42   1  11   4  29 150   0   1   5  13  84
   11  22]
 [ 20  12   9   8  23  84  11  31   0   1   2  15 228   1   4   9  15   8
   12   7]
 [ 34   8  38  11  51  77   5  58   0   4   5  15 144   0   2   4  22  12
    4   6]
 [ 16   8  40   2  49  36   7  61   2   5   4  27 168   0   4   2  24  24
    8  13]
 [ 51   8   8  10  24  84   6  36   1   9  11   8 178   2   5   5  12  19
   13  10]
 [ 14   8  20   7  30  78   7  56   0   2   4  26 203   0   2   6  17   7
    7   6]
 [ 26   6  35   4   4  29   3   5   0  66  22  12  28   1   1   4   5 220
   11  18]
 [ 76  12  11   1  20  59   6   9   1  67  27  19  73   0   3   7   8  64
   12  25]
 [ 64  15  11   2   9  55  10  19   1  63  36  21  62   2   3   2   6  75
   13  31]]"
coarse,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(4, 4),Dropout:0)",110.25890231132507,0.1998,0.1998,0.1998,0.1998,0.1998,"[[169  34   4   4   2  22   5  27  25  33  23  22  85   0  14   2   1   3
   10  15]
 [106  60  43   3   9  24   6  22  14  28  56  21  39   0  40   6   1   3
    4  15]
 [  6  22 240   8  51   6   8  12  13   1   7  12  18   0  70   2   1  22
    0   1]
 [ 35  39  25  27  32  86  41  46  19   7  10   9  27   1  58   4   3   9
    4  18]
 [  2   8  96  10 153  10  23  20  30   1   1  17  20   0  72   0   3  26
    0   8]
 [ 80  38  21  21  18 109  14  30  15  13  11  21  35   1  31   5   2   5
    5  25]
 [ 29  32  41  21  43  55  47  43  32   9  11  15  31   2  54   3   4  12
    4  12]
 [ 30   4  20   7  12  34  18 110  37   3   2  58  74   0  41   5   2  24
    2  17]
 [ 40  20  14   2   6  12   8  44  63   2   4  37 118   3  96   2   4   9
    4  12]
 [ 59  17   7   0   1   8   1   2   4 173  89  19  18   0   9   1   0  60
    7  25]
 [ 71  34  29   0   1   9   0   2  10 114 125  22  24   0   4   0   0  48
    3   4]
 [ 50  12  10   1   3  10   8  43  43  19  13  51 124   1  32   3   3  53
    6  15]
 [ 44  24   8   2   2  21   8  33  66   6   3  40 167   0  55   5   4   3
    5   4]
 [ 58  22  40   7  15  37  19  40  47  11   4  27  80   0  65   6   0  11
    4   7]
 [ 19  22  53  16  19  21  29  24  47   7  10  20  40   0 154   2   5   4
    1   7]
 [ 76  27   5  13   9  28  15  67  37  21  11  21  77   1  39   7   8  20
    3  15]
 [ 38  35  26   3   7  16  14  54  49   4   3  39 100   1  79   6   4   6
    7   9]
 [ 21   2  28   2   7  10   3  28   3  53  12  25  11   1   3   0   1 266
    6  18]
 [ 73  18  11   3   7  43   4  26  19  84  25  21  41   0  26   3   2  40
   10  44]
 [ 41  16   6   7   7  51   8  27  18  76  19  26  41   1  13   3   2  64
   11  63]]"
coarse,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(8, 8),Dropout:0)",107.9375262260437,0.2506,0.2506,0.2506,0.2506,0.2506,"[[146  39   1   7   4  17   9  30  24  25  32  36  39   3  13  15  10   6
   26  18]
 [ 88  84  39  18  20  24  13  20  19  18  17  12  32   3  29  17   6   8
   10  23]
 [  4  12 268  19  58   6  10  30   7   3   6   7  13   4  28   3   1  15
    0   6]
 [ 22  22  16  66  38  80  37  31  15   8  12  12  14   7  39  17  13  13
   16  22]
 [  3   6 100  10 174   4  21  33  28   1   2  15  11  10  41   2   2  22
    2  13]
 [ 33  17  12  35  18 104  24  19  19  17  16  12  29   6  39  13  10  11
   34  32]
 [  8   7  18  20  41  38  76  19  23  16  16  23  17   7  90  11  14   6
   23  27]
 [ 28  18  24  17  22  16  14 191  18   3   5  26  31  10  12  21  10  14
    3  17]
 [ 34  17   5   9  13  17   8  42  72  13   2  55  95   8  41  21  19   7
   10  12]
 [ 40   6   0   1   4   2   2   5   7 207  87  21  14   0  11   5   1  33
   31  23]
 [ 33  12  17   3   7   9   2  10   9 118 176  17  11   1  11   7   7  26
   15   9]
 [ 27   3   3   1   9  12   7  47  40  39  10  99  84   1  29   8   9  21
   32  19]
 [ 30   8   9   7   6  20   8  38  54   8   4  43 141   4  46  23   9   3
   25  14]
 [ 56  21  32  11  16  28  21  67  44  14   9  30  44   3  46  19  14   7
    6  12]
 [ 10   8  46  15  21  25  52   7  21  11   6  22  33   5 173  10   9   9
   12   5]
 [ 52  30   6  14   9  36  19  63  35  15   7  36  57   9  23  25  13  15
   23  13]
 [ 33  11  13  18  14  19  16  50  42   3   5  49  85   6  68  15  13   9
   18  13]
 [ 13  14  15   2   8  13   3  30   6  23  10  12   6   1   6   7   0 308
   13  10]
 [ 27  12   6   4  14  41  10  10  15  66  27  39  31   0  31  12   7  28
   76  44]
 [ 34   7   2  10  13  12  12  17  12  61  34  44  33   0  14  10   2  31
   48 104]]"
coarse,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(16, 16),Dropout:0)",99.1584415435791,0.2908,0.2908,0.2908,0.2908,0.2908,"[[176  37   2  10   3  18   4  18  31  20  22  37  28  14  12  14  11   6
   26  11]
 [ 66 126  23  14  19  14   9  14  26  19  21  11  15  14  27  22  13  10
   27  10]
 [  4  11 266  17  59   4  15  24  13   3   7   5   2   8  25   8   6  15
    3   5]
 [ 13  17  16 126  18  61  31  32  21   8  18   4  14   7  47  17  11  15
   15   9]
 [  2  11  73  20 191   6  35  28  27   1   8  11   9  14  27  10   6  10
    6   5]
 [ 21  21  14  71  12 102  30  15  15  13  25  15  16   6  38  12  10  15
   36  13]
 [ 11   4  16  20  33  45  96  34  46  13  14  12  18  13  55  16   8   9
   27  10]
 [ 34   9  19  11  29  10  12 187  30   2   5  24  20  19  16  31   7  14
   11  10]
 [ 35  11   5   8   8  21  26  23 119  13   9  37  48  21  34  18  28  10
   18   8]
 [ 21   7   2   5   1   6   4   4  11 215  84  22   9   1  11   5   6  44
   29  13]
 [ 13  15  10   7   7   3  11   7  14  97 228   6   9   3   6   8   5  21
   15  15]
 [ 23   6   5  11   5  11   9  39  43  33  10  99  55   9  28  20  18  19
   41  16]
 [ 27  13  10  10   4  16   8  26  89   7   7  32 113  14  32  23  21   2
   35  11]
 [ 37  20  31  19  18  13  30  46  56  19  18  21  29  30  31  31  21   9
   13   8]
 [ 19   2  22  23  13  19  26  12  35  17   7  13  15  18 216   8   7   7
   15   6]
 [ 53  28   7  19  11  14  17  40  49  11  20  27  40  13  24  50  18  15
   30  14]
 [ 24  15   9  19   6  20  26  38  94   3   9  25  63  14  34  35  36  12
   15   3]
 [  9   8   6   6  10  15   3  13   9  24  19  13   3   2   6   8   0 324
   13   9]
 [ 25  13   8   8   9  30  25   7  11  60  25  23  27  12  24  11   2  31
  122  27]
 [ 24   6   3  12   8  12  10  17  19  51  46  25  25   8  17  19   8  41
   63  86]]"
coarse,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(32, 32),Dropout:0)",83.15323114395142,0.3193,0.3193,0.3193,0.3193,0.3193,"[[163  36   2  17   1  13   9  25  29  13  23  34  26  15  12  18  17   1
   24  22]
 [ 65 153  26  11  13  10  12  11  18  24  15   4  29   9  21  32  14  12
   10  11]
 [  5  21 272  15  50   6  15  19  15   2   9   4   6  14  19   3   5  11
    5   4]
 [ 15   9  16 154  24  47  31  24  28  14   7   7  14   4  40  13  16   7
   20  10]
 [  2   8  57  14 207   8  23  36  26   3   7   7  12  17  25  10  10  14
    8   6]
 [ 25  18   8  77  15  99  33  13  13  10  20  12  11  14  41  13  14  12
   30  22]
 [ 14   8   7  32  22  37 145  17  42  11   9  11  15  17  41  11   9   5
   30  17]
 [ 26  13  32  15  24   8  13 177  28   4   6  23  23  23   9  29  12  11
   12  12]
 [ 35  12   3  20   8  21  24  18 117   9   3  45  59  23  27  29  20   6
   12   9]
 [ 19   8   2   5   1   8   6   3  11 240  76  19   4   3   7   4   3  28
   31  22]
 [ 13  12   6   6   7   5  15   5  13  70 254   4   5   4   6  15   5  21
   17  17]
 [ 22   9   5  11   6  10  18  25  29  29   9 114  52  12  31  27  25  18
   30  18]
 [ 25  15   7  12   6  14  18  24  71   8   5  39 117  12  26  25  31   5
   27  13]
 [ 39  20  19  13  28  16  30  51  34  15  15  17  32  50  28  34  19  12
   18  10]
 [ 15   6  18  31  19  18  40   9  39  13   3  20  10  19 187   4  17   6
   18   8]
 [ 37  28   5  21   7  16  16  41  39  16  14  17  43  25  15  82  29  15
   20  14]
 [ 24  11   9  31   8  17  24  29  53  10   5  23  50  18  36  46  64  11
   22   9]
 [ 12   2   8   8   8   7   7  13   6  29  17  10   3   6   8  12   1 319
    9  15]
 [ 23  14  10   6   8  19  27  11   6  53  17  33  15  10  19  11   7  29
  128  54]
 [ 17   8   4  11   8  10  21  15  12  54  32  30  18   6  14   9   7  26
   47 151]]"
coarse,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(64, 64),Dropout:0)",76.91558122634888,0.3379,0.3379,0.3379,0.3379,0.3379,"[[177  30   0   9   1  16  10  24  34  15  15  31  25  22  10  16  21   5
   21  18]
 [ 60 157  18   9  12  20  10  14  13  16   9  14  17  14  25  32  22   6
   17  15]
 [  7  16 260  16  62   9   8  20   9   2   4   5   3  17  21   3  11  11
    7   9]
 [ 11  11   8 173  19  57  24  21  15   9   6  11  14  13  42  13  18   7
   13  15]
 [  5  11  59  27 210   2  19  25  17   1   5  14  10  18  25   7  13  15
    6  11]
 [ 17  10  13  64  17 117  31  13  16  17  16  11  13  13  35  17  21  11
   26  22]
 [ 14  10   8  19  25  41 157  10  28  12   9  18   5  18  51  17  14   6
   19  19]
 [ 29  13  23  18  25  16  10 172  15   2   7  29  21  37  17  19  17  10
   10  10]
 [ 26   7   2  23  15  16  19  16 128  11   8  47  46  23  34  23  32   6
   11   7]
 [ 20   7   0   9   2   4   6   2   6 245  70  20   6   2  10   8   9  25
   32  17]
 [ 17  17   3   5   3  11   8   2   4  58 271   5   4   7   7   8  10  24
   12  24]
 [ 19  10   7  15   8  12  18  27  40  15   7 143  31  10  27  22  28  18
   22  21]
 [ 22   6   8  13   5  17  10  25  64   8   7  36 107  21  29  23  55   3
   22  19]
 [ 34  26  17  25  22  18  25  39  38   5  15  26  20  72  18  33  34   8
   11  14]
 [ 12  11  19  32  22  14  20   7  33  14   4  22  16  13 205   3  25   2
   13  13]
 [ 40  32   2  16   8  17  16  35  30  11  11  28  34  33  11  84  33  17
   23  19]
 [ 24  21   7  19  13  17  19  28  56   7   3  31  46  33  32  31  74  13
   14  12]
 [  8   9   3   4  11   9   5  16   8  37  11  12   6   6   4   7   2 324
    7  11]
 [ 14  20   6   8   7  22  21   8  10  57  17  33  13   9  21  10  11  23
  140  50]
 [ 17   6   6  13  13  15  19   8  11  48  21  28  19   5  16  13   7  26
   46 163]]"
coarse,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(128, 128),Dropout:0)",85.33417749404907,0.348,0.348,0.348,0.348,0.348,"[[177  44   2   9   6  11   7  21  22  10  17  25  24  21  16  30  16   5
   16  21]
 [ 45 172  19  17   8  15  16   9  16   8  15  13  13  22  24  31  22   4
   15  16]
 [  6  12 264  11  65  19   9  22  11   1   4   4   5  19  11   8   8  11
    5   5]
 [ 12  16   7 194  20  49  34  14  12   7   8   9  11  12  25  14  14   9
   10  23]
 [  5   6  66  22 212   7  13  26  13   3   5  17  15  23  20  16  10  10
    3   8]
 [ 22  20  10  60  13 137  36  13  11  15  14   7  10  12  40  18  17   9
   16  20]
 [ 17  16   9  29  18  21 171   8  23   9  10  14   9  22  28  17  27   7
   26  19]
 [ 27  15  23  17  28  11   8 189  14   5   6  15  24  35   8  26  32   6
    6   5]
 [ 26   6   3  19   9  24  20  21 113  13   7  35  33  25  34  35  53   5
    7  12]
 [ 26   4   7   9   3  12  15   3   8 239  56  16   4   3   9   6   8  20
   25  27]
 [  7  17   4   9   4   9  10   7   9  47 287   6   2   8   5  11  10  22
    7  19]
 [ 32  11   2  14   7  18  14  15  39  23   7 133  35  22  27  19  38   9
   13  22]
 [ 26  11   6  10   9  24  14  21  61   6   2  23 124  21  24  23  60   5
   18  12]
 [ 33  21  17  28  24  23  17  47  20   5  18  15  34  74  21  38  27  10
   10  18]
 [  9  18  23  29  15  26  29  10  18   8   5  27  19  17 191   9  24   5
   10   8]
 [ 34  34   5  18  14  25  12  32  20  14  11  27  43  37  11  78  32  11
   16  26]
 [ 28  11   7  26   8  15  16  40  37  10   3  29  41  19  38  38 100  14
    8  12]
 [ 12   5  15   7   5   6   7  10   7  33  17  11   6   5   6  12   1 306
   15  14]
 [ 13  14   4  10  12  21  24   7  11  50  19  21  16  11  24  17  14  16
  145  51]
 [ 16  13   8   9  11  15  21  11   8  41  17  26  15   7  14  13  13  21
   47 174]]"
fine,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(2, 2),Dropout:0)",118.83698630332947,0.0527,0.0527,0.0527,0.0527,0.0527,"[[ 1  1  2 ...  0  0  0]
 [ 1  0 10 ...  3  0  0]
 [ 0  0 17 ...  0  0  0]
 ...
 [ 0  1  6 ...  6  0  0]
 [ 0  2 14 ...  0  0  0]
 [ 0  2  4 ...  2  0  0]]"
fine,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(4, 4),Dropout:0)",165.05982112884521,0.0849,0.0849,0.0849,0.0849,0.0849,"[[10  0  5 ...  0  0  0]
 [ 4  3  4 ...  1  0  3]
 [ 2  1 15 ...  1  0  0]
 ...
 [ 0  0  0 ... 12  0  8]
 [ 3  0  9 ...  1  0  0]
 [ 0  1  4 ...  4  0  0]]"
fine,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(8, 8),Dropout:0)",126.99783039093018,0.1372,0.1372,0.1372,0.1372,0.1372,"[[30  0  1 ...  0  2  1]
 [ 0 16  6 ...  1  2  0]
 [ 1  1 12 ...  1  5  0]
 ...
 [ 0  5  4 ... 12  1  2]
 [ 3  3  4 ...  4  3  0]
 [ 0  3  0 ...  3  0  1]]"
fine,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(16, 16),Dropout:0)",119.8000705242157,0.1685,0.1685,0.1685,0.1685,0.1685,"[[39  1  1 ...  0  0  0]
 [ 0 16  1 ...  2  0  0]
 [ 2  1 21 ...  0  3  0]
 ...
 [ 0  0  0 ... 16  0  1]
 [ 1  4  7 ...  2  7  1]
 [ 0  1  1 ...  1  0 11]]"
fine,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(32, 32),Dropout:0)",96.13734650611877,0.2069,0.2069,0.2069,0.2069,0.2069,"[[45  2  0 ...  0  1  0]
 [ 1 34  1 ...  2  0  0]
 [ 1  0 14 ...  3  7  0]
 ...
 [ 0  0  1 ... 16  0  5]
 [ 1  0  6 ...  1  7  1]
 [ 0  0  0 ...  1  0 20]]"
fine,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(64, 64),Dropout:0)",80.6267569065094,0.2329,0.2329,0.2329,0.2329,0.2329,"[[43  1  0 ...  0  1  0]
 [ 3 30  1 ...  0  1  0]
 [ 1  1 14 ...  2  1  0]
 ...
 [ 0  0  1 ... 26  2  1]
 [ 2  2  6 ...  1  7  1]
 [ 0  1  0 ...  2  0 22]]"
fine,0,0,0,0,EasyNeuralNet,"EasyNeuralNet Layers:(128, 128),Dropout:0)",81.8112735748291,0.2394,0.2394,0.2394,0.2394,0.2394,"[[49  2  1 ...  0  1  1]
 [ 0 32  1 ...  2  0  0]
 [ 1  1 23 ...  0  6  0]
 ...
 [ 0  1  1 ... 17  2  2]
 [ 0  1  9 ...  0 14  0]
 [ 0  0  0 ...  1  1 20]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",182.86419200897217,0.5425,0.5425,0.5425,0.5425,0.5425,"[[626  15  69  37  35  17  10  24 135  32]
 [ 42 560  12  63  29  17  20  30  75 152]
 [ 57   6 431 112 172  99  67  34  17   5]
 [ 24   8  88 438 121 144  90  50  13  24]
 [ 25   4 101 106 526  56  96  63  19   4]
 [ 18   4  91 217 121 402  58  69  14   6]
 [  7   5  42 156 138  30 596   6   6  14]
 [ 17   6  60  77 117  86  24 583   8  22]
 [102  36  23  39  28  17   6  20 696  33]
 [ 41 114  12  85  26  25  14  49  67 567]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",362.5619168281555,0.6341,0.6341,0.6341,0.6341,0.6341,"[[703  15  64  33  30  10  16  17  73  39]
 [ 31 721  10  29  11   6  20   9  39 124]
 [ 59   3 492  76 142  89  78  44  14   3]
 [ 13   9  74 477 106 157  84  49   8  23]
 [ 20   5  76  92 611  47  74  63   9   3]
 [ 12   4  83 194  75 503  49  70   2   8]
 [  6   6  34  72  89  32 732  20   2   7]
 [ 18   2  38  50  85  71  23 695   2  16]
 [ 95  38  23  31  14  18   8  13 719  41]
 [ 32  86  15  49  17  20  22  43  28 688]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",288.66749334335327,0.6799,0.6799,0.6799,0.6799,0.6799,"[[721  18  48  33  31  18  19  17  47  48]
 [ 22 748  11  24   6  11  17   9  25 127]
 [ 54   3 519  86 108  91  85  43   5   6]
 [ 22   7  68 485  81 217  68  35   4  13]
 [ 19   2  52  79 673  58  56  50   8   3]
 [ 13   3  37 151  60 651  27  50   2   6]
 [  4   6  42  66  56  43 769   4   5   5]
 [ 12   3  30  50  74  78   9 737   0   7]
 [ 84  39  17  33  19  14   8   8 736  42]
 [ 38  74  15  33   7  24   6  27  16 760]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",182.53303241729736,0.5731,0.5731,0.5731,0.5731,0.5731,"[[619  18  96  37  38  23  13  29  77  50]
 [ 32 688   4  33   7  17  15  23  35 146]
 [ 60   3 392  77 178 144  63  57  16  10]
 [ 19  18  57 401 113 234  81  45   9  23]
 [ 18   2  74  69 578  71 103  69  10   6]
 [ 15   9  63 175  81 519  46  77   5  10]
 [  9  11  44  79 119  53 657  18   4   6]
 [ 21  13  32  77  99 108  23 593   3  31]
 [101  72  25  37  10  18   8  12 659  58]
 [ 71 139   9  39  15  20  14  37  31 625]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",144.35852599143982,0.6455,0.6455,0.6455,0.6455,0.6455,"[[705  14  60  43  26  18  11  24  57  42]
 [ 36 748  15  21   5   9  15  14  27 110]
 [ 53   3 511  87 119 106  66  40  12   3]
 [ 30  13  68 451 105 174  72  67   6  14]
 [ 14   7  63  74 645  57  53  77   8   2]
 [  9   2  55 185  80 545  28  77   5  14]
 [  7   6  43  89  98  41 699   9   6   2]
 [ 10   2  38  49  78  93  11 712   0   7]
 [ 80  44  21  51  12  20   9   7 716  40]
 [ 36  70   7  43  12  24   9  44  32 723]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",324.85398602485657,0.7005,0.7005,0.7005,0.7005,0.7005,"[[753  18  55  27  26   6  16  18  45  36]
 [ 24 813   9  15  11   5   9  13  27  74]
 [ 63   2 526  78 153  71  57  42   4   4]
 [ 20   7  57 536  87 173  65  43   5   7]
 [ 14   4  48  57 731  37  44  57   6   2]
 [  8   1  48 181  72 616  13  53   3   5]
 [  5   2  37  94  77  35 739   6   2   3]
 [ 10   4  21  56  65  65  12 762   2   3]
 [ 79  43  17  30  22  10   4   7 760  28]
 [ 32  74   7  27  14  16   5  30  26 769]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",234.41057109832764,0.5302,0.5302,0.5302,0.5302,0.5302,"[[601  26  60  43  44  23  11  23 123  46]
 [ 56 630   8  36  11  21  14  26  52 146]
 [ 79   7 375  85 176 120  68  65  19   6]
 [ 32  24  69 361 135 201  90  60   9  19]
 [ 17   2  72  76 550  78  91  96  14   4]
 [ 21   5  93 202 138 373  58  95   6   9]
 [  7   7  41 130 137  66 573  26   6   7]
 [ 20  11  37  79 106  99  22 602   5  19]
 [117  71  26  49  22  16   7  10 636  46]
 [ 42 121  13  67  13  19  16  59  49 601]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",191.02423906326294,0.634,0.634,0.634,0.634,0.634,"[[692  13  72  38  34  10   8  18  70  45]
 [ 35 725  10  24   8   7  24  17  33 117]
 [ 64   2 489 106 136  86  58  39  10  10]
 [ 20   6  76 478 108 159  78  41  17  17]
 [  9   1  93  88 615  51  75  62   3   3]
 [  5   1  74 239  62 510  41  54   9   5]
 [  7   6  50  97  73  45 698   9   3  12]
 [ 15   3  43  75  90  69  14 673   6  12]
 [ 89  38  34  32  10  12   7  13 729  36]
 [ 46  67  13  43  20  11  18  28  23 731]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",428.6844732761383,0.7034,0.7034,0.7034,0.7034,0.7034,"[[736  14  58  39  26  17  13  20  42  35]
 [ 14 786  10  30   4   4  13   4  33 102]
 [ 58   3 542  87 111  79  62  46   8   4]
 [ 15  10  46 545  78 195  61  36   5   9]
 [ 12   2  47  70 712  47  40  64   4   2]
 [  8   0  51 161  50 640  16  70   1   3]
 [  4   2  34 100  61  29 758   9   3   0]
 [ 10   3  29  62  55  66   6 763   1   5]
 [ 78  40  12  26  19  13   9   7 756  40]
 [ 37  52   6  30  10  11   8  27  23 796]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:1, Pool Blocks:2, Dense Layers:2)",389.2096104621887,0.5583,0.5583,0.5583,0.5583,0.5583,"[[657  34  58  36   7  15   9  15 111  58]
 [ 41 723   7  26   5   5   9  14  34 136]
 [ 84  10 435 113 145  72  64  46  23   8]
 [ 39  16  84 449  86 129  86  57  26  28]
 [ 24   6  98 113 500  41  95 107   8   8]
 [ 22  14 111 243  84 342  71  77  15  21]
 [ 13   5  49 131 126  46 581  29   2  18]
 [ 17   9  41 107  94  55  23 625   3  26]
 [152  59  25  48   5   9   3  12 626  61]
 [ 44 152  12  49   6  11  11  31  39 645]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:1, Pool Blocks:2, Dense Layers:2)",240.1913959980011,0.6393,0.6393,0.6393,0.6393,0.6393,"[[711  12  63  23  52   9   9  15  80  26]
 [ 28 722  17  23  13   8  11   4  51 123]
 [ 66   0 478  75 175  85  64  39  13   5]
 [ 20   7  74 492 104 180  64  31  12  16]
 [ 22   4  62  63 670  47  67  59   5   1]
 [  5   2  67 205  83 529  41  57   6   5]
 [  7   4  30  99  89  49 694  18   4   6]
 [ 13   4  34  68  92  77  12 683   6  11]
 [ 90  39  17  29  21   8   5  10 758  23]
 [ 44 116  10  48  13   9  14  39  51 656]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:1, Pool Blocks:2, Dense Layers:2)",361.30554151535034,0.7071,0.7071,0.7071,0.7071,0.7071,"[[735  17  64  36  24  11  13  13  54  33]
 [ 25 811  10  19   7   4  12   6  23  83]
 [ 45   3 586  69 124  60  60  40   6   7]
 [ 13  12  57 567  66 153  80  37   6   9]
 [ 13   3  56  51 721  46  54  48   6   2]
 [  9   1  56 204  57 576  34  60   1   2]
 [  2   3  32  63  61  33 791   8   3   4]
 [ 12   1  26  43  87  52  10 758   2   9]
 [ 68  32  26  20  17  12   9  11 775  30]
 [ 38  87   6  36  15   9   3  31  24 751]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:2, Pool Blocks:2, Dense Layers:2)",382.96272683143616,0.5399,0.5399,0.5399,0.5399,0.5399,"[[650  21  52  27  17  19  15  22 126  51]
 [ 35 681   4  23   1  10  14  15  74 143]
 [ 81   6 342 125 142 109  95  61  27  12]
 [ 37  17  69 401  68 207 111  52  19  19]
 [ 34   4 124  92 415  86 130 100  10   5]
 [ 17   8  90 213  75 424  68  88   8   9]
 [ 10   7  50 135 103  52 587  31   9  16]
 [ 16   5  25  98  60  91  43 627  11  24]
 [129  72  13  34  10  18   7   7 660  50]
 [ 53 156   9  40   4   9  18  36  63 612]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:2, Pool Blocks:2, Dense Layers:2)",223.5225954055786,0.645,0.645,0.645,0.645,0.645,"[[699   8  52  36  27  12  10  10 101  45]
 [ 33 743  12  21  12   9  12  13  28 117]
 [ 69   2 506  76 160  64  72  28  18   5]
 [ 29   6  66 476 113 179  66  37  16  12]
 [ 26   3  75  52 661  31  78  58  12   4]
 [ 12   4  72 227  95 486  43  50   7   4]
 [  6   4  45  69 103  25 725   9  10   4]
 [  9   1  41  58 116  66  17 667   4  21]
 [ 95  32  25  29  19   5   9   6 744  36]
 [ 49  69   4  30  12  11  15  32  35 743]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",158.5484344959259,0.3716,0.3716,0.3716,0.3716,0.3716,"[[200  53   0   5   0  12   6  10  30  16   7  46  33   9  18   9  30   3
    5   8]
 [ 53 201  16   8   9   6  15  10  18  20  13  18  34   4  28   5  28   2
    6   6]
 [  3  17 282   9  43  13   7  14  26   3   4   7  12   2  43   0   5   3
    4   3]
 [ 11  11  10 215  21  41  29   9  17   9   6  14  16   4  49   7  14   1
    7   9]
 [  2   8  88  23 185   1  25  24  29   2   1  26  16   5  36   3  17   0
    6   3]
 [ 25  14   9  56   7 119  40  13  25  14  15  20  21   6  57   5  12   2
   17  23]
 [  9   8   8  15  12  19 225  10  16  17  14  13  14   5  69   5  14   3
   13  11]
 [ 22   3  30  11   7  10  12 163  54   4   3  37  34  11  27  22  21   2
   11  16]
 [ 35   1   4   7   5  10  16  13 150   8   4  78  69   5  39   4  23  10
    6  13]
 [ 29  10   1   3   2   4   6   2   9 276  41  23   9   1  31   2   2  17
   17  15]
 [ 23  18   0   3   3   7   8   0  21  58 292  13  10   4   1   4  15   9
    3   8]
 [ 35   6   4   7   3   7  11  15  51  19   4 158  65   7  36   9  20  17
   11  15]
 [ 31   9   8   8   1   9   9  20  72  10   5  66 140   6  31   6  36   4
   16  13]
 [ 54  17  15  17  16  18  26  33  58   8   9  42  38  49  43  17  20   6
    7   7]
 [ 13  10  16  13  19  14  33   9  33  10   1  19  15   6 247   2  25   2
    4   9]
 [ 56  30   2   9   1  12   8  38  44  15   3  55  69  13  31  51  21   9
   16  17]
 [ 40  19  16  10   6   7  22  12  53  12   4  52  61   7  58   7 101   4
    5   4]
 [ 15   7   3   2   1   2   6   5  17  40  11  27   8   1  13   9  13 302
    4  14]
 [ 20  15   5   4   1  18   9  13  30  51   6  33  29   5  30   5   3   6
  172  45]
 [ 24   6   4   7   4   8   8  15  20  46  18  47  31   3  19   3   3   6
   40 188]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",188.55411171913147,0.4276,0.4276,0.4276,0.4276,0.4276,"[[219  33   1   3   0   7   9  10  30   9  12  33  36  18   9  19  31   2
    7  12]
 [ 63 201  19   4  10   3   6  10  20  13  18  22  25  10  19  20  19   2
    7   9]
 [  4  14 294   5  31  10   4  18  24   3   5   6   9  14  30   2  11   8
    6   2]
 [  7   7   9 201  20  49  26  10  19  14   6  16  15  12  44   9  16   3
    9   8]
 [  4  18  42  13 233   7  12  18  21   1   6  27  15  19  26  10  15   6
    4   3]
 [ 29  16  10  36   4 165  28  11  33  10  11  13  21  13  34  21  18   4
   11  12]
 [  4  10   4  16  13  27 190  10  19  18  21  16  16  12  50   9  28   9
   15  13]
 [ 22   6  15   5   9   6   5 207  40   3   7  21  37  39  12  25  23   3
    2  13]
 [ 36   7   3   4   1   3   5  13 209   8   9  59  53  10  24  16  22   6
    6   6]
 [ 16   8   1   1   0   5   7   1  14 290  38  20   8   5  15   5   5  22
   18  21]
 [ 18  16   4   2   3   7   7   0  12  57 310  10   8   1   6   1   8  13
    5  12]
 [ 32   4   4   3   6   7   8  11  60  15   5 179  58  16  28  14  16   9
    7  18]
 [ 28   8   1   9   4  10   6   9  66   3   2  45 176  19  23  24  38   2
    7  20]
 [ 36  19  15   8   7  10  12  39  44   6  10  28  57 111  26  21  26   6
    7  12]
 [ 11   8  13  10   7   9  16   9  30   9   4  23  15  17 286   1  22   2
    6   2]
 [ 47  27   3   2   1  10   3  28  48  15   7  45  55  23  15 101  23  17
   13  17]
 [ 33  14   7   6   7  10  17  18  49   6   2  27  70  12  42  19 147   9
    1   4]
 [ 13   3   5   1   3   8   1   3  16  30  15  13   1   2  10   7   4 345
    6  14]
 [ 21   8   7   2   5  12  10   6  19  41   8  20  27   8  17  13   2  10
  196  68]
 [ 29   3   2   4   6   4   4   8  14  41   6  28  26   9  13  14   5  19
   49 216]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",267.83874106407166,0.5024,0.5024,0.5024,0.5024,0.5024,"[[231  27   1   3   2   5   2   5  25  11   8  33  33  11  15  33  33   2
    5  15]
 [ 63 217  15   4  14   6   4   7   8  12  11  15  19   8  29  30  24   2
    8   4]
 [  2  16 353   6  37   2   2  13  15   1   3   5   3   7  17   4   5   4
    4   1]
 [  7   8   9 276  13  43  19   6   8   9   4   7   5  13  31   7  11   2
   12  10]
 [  8  11  56  17 269   5   1  20  16   3   4  13  10  16  17  17   8   5
    1   3]
 [ 17   5   5  45   6 229  34   6  12  13   5  10  11  12  35  10   9   4
   11  21]
 [ 13  10   5  16   6  29 288   6   5  11  12   7   5   7  32   6   7   2
   19  14]
 [ 14  11  25   4   7   2   7 234  26   2   3  15  24  35  16  30  21   3
    6  15]
 [ 41   5   6   4   4   6   2  11 208   5   5  66  40   7  23  20  29   5
    3  10]
 [ 14  11   0   2   2   5   8   1   3 336  25  14   2   3  14   6   5  11
   15  23]
 [ 19  18   4   1   2  11   7   2   8  53 305   8   7   2   5   9  12  14
    3  10]
 [ 26   5   2   4   6   5   4  13  38  19   2 229  43   7  32  12  24   8
    8  13]
 [ 30   4   3   3   6   8   3  15  65   5   2  50 188   9  22  20  52   0
    9   6]
 [ 40  18   8  22  21   7   6  39  32   4   1  18  24 152  22  36  23   5
    9  13]
 [ 13   8   7   8   8   9  14  14  14   6   1  21  12  12 315   6  16   1
    8   7]
 [ 57  30   4   5  11  11   5  22  42   3   6  28  32  21  19 141  26   7
   13  17]
 [ 39  17   4   4  11   9  11  13  40   7   4  31  52   8  41  31 169   5
    2   2]
 [ 11   2   6   0   4   4   1   5  13  23   9  12   2   4   3  13   9 363
    3  13]
 [ 12   6   8   3   5   7   5   9   5  30   7  17  14   4  20   5   4   6
  259  74]
 [ 17   7   4   6   5   5  15   9   6  34   4  14  17   5  10  15   1   2
   62 262]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",183.0995626449585,0.3442,0.3442,0.3442,0.3442,0.3442,"[[177  39   0   7   3   5   8  15  32  17  15  22  28   5  18  22  43  11
   11  22]
 [ 76 152  23   2   9   8  15   5  32  14  13  13  36  10  22  17  23   6
    7  17]
 [  8   9 230   8  33   7  12  12  48   3   2  12   7  13  53   7  19   5
    8   4]
 [  7  13   7 219  25  40  25   7  20  10   4  11  16   6  38   9  13   2
   11  17]
 [  6   7  69  10 202   4  20  11  41   1   2  22  14  12  33   5  23   5
    4   9]
 [ 23  14   8  57   6 134  32  10  33   9  13  14  19   5  48  15  17   4
   23  16]
 [  7  13   7  17  26  21 180  10  24  16  10  17  14   9  56  17  17   4
   24  11]
 [ 19   6  19   4   5   3   5 154  56   4   1  34  34  30  25  30  33   1
   16  21]
 [ 33   5   7   9   3   5  10  16 180   8   0  38  54   7  32  19  45   8
   16   5]
 [ 30   9   1   5   1   2   9   1  11 219  61  31   6   0  15   2   8  19
   36  34]
 [ 30  36   1   1   1   1  12   3  20  61 252  14   9   2   3   3  21  10
   12   8]
 [ 35   4   5   5   3   3  10  18  79  20   5 101  59   7  23  19  42  15
   15  32]
 [ 22   4   9   8   7   5   4  16  90   7   1  39 134   5  33  29  47   4
   20  16]
 [ 27  16  16  15  15  13  14  35  60   5   6  22  52  68  30  32  40   5
   15  14]
 [  6  12  23  24  20   9  20  13  44  10   3  16  20  12 225   4  21   1
   10   7]
 [ 47  22   5   7   2   7  15  33  54  13   3  28  66  22  20  67  31  14
   27  17]
 [ 28  16  16  12   9   9  22  23  71   9   0  18  65   7  47  19 108  10
    6   5]
 [ 30   4   4   0   6   6   3   6  15  32  14  22   5   1  11   7  21 288
   11  14]
 [ 13   6   6   2   2  10  24   9  22  58   4  33  29   4  27  15   2   7
  173  54]
 [ 12   3   4   7   4  11  12  17  25  40   9  38  25  11  16  15   7   7
   58 179]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",119.70182132720947,0.4272,0.4272,0.4272,0.4272,0.4272,"[[196  35   1   2   2   5   3  13  32   9  16  44  34  15  20  29  31   4
    5   4]
 [ 67 188  17   6   8   7  12  10  15  11   8  18  28   8  21  31  23   1
    7  14]
 [  4   9 284  10  42   6  11  20  19   0   5  13   7   8  24   5  14   7
    5   7]
 [ 12   7   8 236  18  41  25   5  10   4   6  10   7  15  37   6  18   2
   15  18]
 [  6   9  45  16 234   4  21  19  27   1   6  29  12  11  17   9  21   4
    5   4]
 [ 12  12  13  51   4 158  58  10  14   9   8  15   9  12  46  17   7   4
   24  17]
 [  7  11   4  19  14  24 245   7  14  15   9  17  10   3  43   7  17   2
   11  21]
 [ 20   9  19   5   5   1  10 210  40   0   2  24  29  31  21  23  25   5
    5  16]
 [ 28   3   4   4   3   4   3  12 172   9   2  80  64   6  32  22  33   8
    4   7]
 [ 19  10   1   2   0   2  11   1   8 270  38  33   5   1  15   5   5  11
   28  35]
 [ 22  18   5   1   3   4  10   2  10  41 308  18   8   1   4   4  10  20
    2   9]
 [ 38   7   6   5   3   5  11  10  53  27   5 183  36   5  30  19  25   4
   12  16]
 [ 24   9   4   7   4   5   1  20  68   2   2  57 157   8  19  25  55   7
    6  20]
 [ 34   9  20  25   8  13   7  34  47   8   1  20  31 100  30  44  35   7
   13  14]
 [ 14  11   8   8  12   8  24   9  20  11   1  31  19   5 268   6  31   2
    7   5]
 [ 51  16   1   5   1  11   7  26  54  11   3  31  57  28  22 124  23   7
   11  11]
 [ 32  21   4   7   8   4  14  13  48   9   2  38  61  15  37  23 156   4
    0   4]
 [ 15   5   5   0   1   3   4   8  17  26  16  23  10   3   9  12   3 323
    4  13]
 [ 16   9   8   2   1  11  19   6  15  39   6  23  11   9  15   9   2   3
  220  76]
 [ 18   3   3   7   0   6  12   8  12  38   9  27  16   6  10  15   7   5
   58 240]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",375.036253452301,0.4842,0.4842,0.4842,0.4842,0.4842,"[[214  40   1   2   2  13   1  13  31   9   4  28  31  11  16  35  25   5
    9  10]
 [ 52 203  24   5   5   7   5   8  14   9   9  16  17  10  32  33  29   5
    8   9]
 [  2  10 348   5  41   7   3  10  10   0   0   4   3  13  16   7   9   7
    2   3]
 [  5   9   9 272  19  37  27   4  12   6   2   8   4   5  36   4  11   3
   12  15]
 [  3  12  58  12 284   2   5  14  22   2   3  12   4  12  22  12   8   3
    4   6]
 [ 14   8  10  39   8 205  36   6  15  10  11   9   2  12  49  12  19   1
   14  20]
 [  7  11   5  16  11  29 263   4  12   9  11  12   7   1  48   5  16   4
   15  14]
 [ 12  17  26   6  13   4   8 209  24   2   7   5  13  45  19  33  27   7
    9  14]
 [ 28   7   4   2   9   3   7   9 191   1   3  53  48  12  31  39  39   3
    6   5]
 [ 13   6   1   1   1   2   9   1   7 307  32  11   8   2  18   5   5  12
   20  39]
 [ 14  19   4   1   1   4   5   0   6  33 319  15   5   2   4  11  10  26
    8  13]
 [ 19  11   3   3   3   5   3  10  53  13   3 197  37  10  42  18  38   6
    9  17]
 [ 27   5   3   3   5   6   3  15  78   3   0  37 162   9  30  29  63   2
   10  10]
 [ 25  18  15  17  23  10   6  39  25   3   3  18  24 137  34  46  36   3
    7  11]
 [  9   7   9   7  10   7  16   6  13   4   0  20  10  13 323   5  20   3
   10   8]
 [ 43  28   4   3   6   6   6  18  38   2   6  33  37  33  20 138  35  10
   12  22]
 [ 30  28   4   5  15   6  13  15  54   3   1  33  33  14  37  29 175   2
    1   2]
 [  6   5   5   0   5   2   2   7  13  16  16   9   3   4   7  14   5 363
    7  11]
 [ 11   6  10   2   6  10   8   2  10  27   5   9   8   7  18   9   4   6
  271  71]
 [  9   9   1   5   5   3  10   8   4  28   2  16  12  13  18  18   5   8
   65 261]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",223.422753572464,0.3695,0.3695,0.3695,0.3695,0.3695,"[[184  38   0   9   2  13   6  17  39  14  13  16  33   9  24  13  38  11
    7  14]
 [ 59 178  22   5  16   9  10  18  18  15  15  15  20   9  32  17  28   5
    2   7]
 [  6  13 287   7  53   3   6  27  11   0   1   6   7   5  41   4   9   4
    8   2]
 [ 14  25  11 199  23  48  25   8  16  10   7   8  14   9  43   9   9   4
    7  11]
 [  6  12  95  15 192   3   9  36  30   1   5  19  16  10  24   2  13   4
    2   6]
 [ 20  12  19  44  10 137  45  15  21  14  15  18  12   9  42  14  14   3
   16  20]
 [ 11  10   6  20  16  33 201  11   8  18  13  24  27   2  51   5  20   3
   15   6]
 [ 23   8  28   9  13   5   7 186  44   1   1  20  31  23  35  28  16   7
    3  12]
 [ 37   5   4   3   1  12   4  19 168   4   5  50  68   5  31  21  33   9
   10  11]
 [ 25  12   0   1   0   8  13   0   6 263  45  15  10   1  23   2   3  24
   20  29]
 [ 39   9   5   1   2   4  10   1  17  51 293  10   6   2   3   5  11  23
    1   7]
 [ 31  11   8   6   2   8  12  16  57  21   4 124  63   4  40  10  30  23
   10  20]
 [ 27  11   8   6   4   7   8  20  77   3   4  51 141   6  42  20  42   7
    7   9]
 [ 37  22  31  14  12   9   9  58  44   4   9  16  43  64  48  17  22   3
   25  13]
 [ 13  14  24  11  16   7  18  22  26   7   2  20  19   9 247   4  22   2
    5  12]
 [ 51  26   6   7   3  12  11  50  54  13   4  27  69  17  24  76  22   6
    8  14]
 [ 49  21   5   8  10   8  12  29  63   4   4  34  56  12  47  22  98  15
    1   2]
 [ 30   5   5   2   6   4   5   8  16  28  13  26  10   1  12   5   9 300
    3  12]
 [ 14   7   7   8   4  25  16  16  17  59   3  24  17   8  22  10   5   5
  162  71]
 [ 21   4   6   6   2   3  10  13  19  44  12  28  26   7  18   9   6   7
   64 195]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",84.62072515487671,0.4284,0.4284,0.4284,0.4284,0.4284,"[[221  28   3   3   4   6   4   9  25   4   9  35  30   7  22  27  37   4
    5  17]
 [ 77 179  22   5  10   5   1  10   8   5  14  18  31   9  23  24  29   7
    9  14]
 [ 10  15 267   5  63   3   9  18  14   1   3  11  12   9  26   6  18   2
    7   1]
 [ 10  10   3 223  25  41  21   9  11   4   7  11  14   8  34  11  25   2
   14  17]
 [  7  11  62  10 245   1   8  22  22   0   5  17  15  13  21   4  25   2
    5   5]
 [ 22   6   6  43   9 180  48  10  16  14   8  16   8  13  34   9  23   1
   19  15]
 [  9   7   2  23  11  30 247  11   9  11  10  18   9   4  37   7  19   3
   15  18]
 [ 30  10  17   2  15   1   6 176  38   2   2  30  33  32  20  28  41   3
    5   9]
 [ 33   2   2   1   7   3   1  15 194   2   3  66  61  11  24  19  39   7
    4   6]
 [ 22   2   0   0   0   4   9   0   6 285  30  41   6   0  16  10   4  10
   13  42]
 [ 29  15   1   0   2   6  13   2  13  40 292  21   8   4   4  10  10   9
    5  16]
 [ 20   4   3   3   3   4   6  11  48  18   6 206  54   8  39  17  28  10
    6   6]
 [ 28   8   5   3   4   5   1  12  63   0   2  72 163  10  26  13  55   2
   13  15]
 [ 62  22  13  19  13   8   3  46  33   2   2  29  43  90  25  24  37   6
   13  10]
 [ 17   6  13   5  21   4  18   8  25   4   3  30  20   7 251   7  43   2
    7   9]
 [ 58  21   5   1   3   6   5  30  36   2   2  43  55  20  20 115  32  14
   15  17]
 [ 35  14   2   4  17   6   9  15  54   3   2  32  57  12  39  23 161   3
    6   6]
 [ 26   6   4   0   6   0   1   4  21  18  14  26   3   9   4  14  13 316
    4  11]
 [ 17   2   3   3   3  14  13   7  12  28   4  32  21   6  16  13   6   2
  227  71]
 [ 19   7   1   3   3   8   8   9   6  27   4  36  22   7  15   8  15   3
   53 246]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",197.59592032432556,0.4894,0.4894,0.4894,0.4894,0.4894,"[[225  36   1   1   5   9   3   8  21   5   7  42  30   6  18  21  40   2
    4  16]
 [ 66 214  22   4  14   3   6  15   8  10   9  14   9  21  20  25  21   0
   10   9]
 [  2  13 343   5  38   5   4  17   6   1   4   8   2   8  19   9   7   3
    5   1]
 [  8  10  11 266  28  32  24  10   9   5   2   6   3   7  34   7   9   2
   13  14]
 [  6  12  62   5 285   0   4  13   8   2   5  14   5  13  21  11  16   7
    7   4]
 [ 17  12   9  51   5 203  37  10  14   7   9  16   4   9  39  10  15   4
   10  19]
 [  7  13   5  14   9  30 275  11   6   6  13  15   4   7  26   5  15   1
   19  19]
 [ 10  10  23   5   7   4   9 256  22   3   1  13   8  32  19  35  26   2
    4  11]
 [ 35   6   4   5   3   3   1  11 174   4   0  89  49   7  30  23  43   2
    7   4]
 [  9   8   0   0   2  12   7   1   7 317  21  25   2   1   6   6   8   8
   25  35]
 [ 26  18   6   1   3   4   3   2   6  41 306  19   1   3   8   5  11  20
    6  11]
 [ 31   5   3   2  10   2   3  11  34  19   4 228  32   9  24  12  39   6
    9  17]
 [ 29   4   3   5   6   6   1  15  50   2   1  61 160   8  35  24  68   3
   11   8]
 [ 42  25  11  17  19   5   7  44  20   5   2  20  15 139  30  41  35   5
   10   8]
 [ 12   9  13   8  10  10   8   3  11   6   1  24  10  16 310   2  29   3
   10   5]
 [ 47  40   6   8   7   4   5  30  37   2   4  28  30  30  16 132  32  14
   14  14]
 [ 31  16   9   6  11   8   9  14  31   3   1  44  34  10  53  33 175   3
    1   8]
 [ 10   3   2   1   5   2   2   8  11  22   9  18   5   2   6  12   7 360
    8   7]
 [  8   9   8   3   0  12   7   7   5  20   2  19  12   4  18   9   5   6
  278  68]
 [ 17   8   4   9   3   2  15  14   8  24   2  18   9   3  11  11   6   6
   82 248]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:1, Pool Blocks:2, Dense Layers:2)",360.63058257102966,0.3628,0.3628,0.3628,0.3628,0.3628,"[[159  42   1  13   2   5  13  34  29  24  15  45  27  12  18   8  29   4
    4  16]
 [ 57 159  36   8  15   5  16  24  13  21  14  17  20   6  24   3  24   3
   15  20]
 [  2   6 327  10  42   4   7  28   9   1   1   3   1   4  29   0   3   6
   10   7]
 [  8  17  22 184  26  34  33  26   7   7   5  22   5  10  50   0  10   2
   11  21]
 [  2   6  86  14 207   3  19  45  32   5   3  19  13   2  21   1   8   6
    4   4]
 [ 20  12  29  61   7  79  52  29  21  15  17  15  12   9  50   6  20   2
   19  25]
 [  5   9   9  29  24  10 198  15  15  22   7  20   6   6  62   4  17   7
   22  13]
 [ 13  11  40  13  17   2  12 263  13   5   0   9  11  14  26  12  13   1
    6  19]
 [ 24   7   4   4   4   3  22  39 150  12   3  58  46   8  40  10  53   5
    6   2]
 [ 18   9   3   2   0   4   5   6   4 268  65  10   2   1  31   1  10  21
   13  27]
 [ 14  12   4   5   1   2   8  11  11  57 289  22   4   5   4   1  10  25
    3  12]
 [ 12   8   8   8   7   8  17  42  59  42   4 116  40  11  23   5  35  21
   12  22]
 [ 21  12  10  10   1   7  18  45  65  10   0  51 135   9  42   4  39   4
    8   9]
 [ 26  14  28  15  22  10  27  81  37  13  12  20  29  56  43  12  24   3
   17  11]
 [  7   6  22  26  10   8  42  27  34   9   1   5  14   4 229   1  20   4
   14  17]
 [ 42  24   5  14   3   6  28  88  38  15   1  26  42  14  28  39  28  13
   21  25]
 [ 21  16   4  27  12   6  33  49  63  17   6  38  37   8  53  10  87   6
    1   6]
 [ 14   4   6   5   5   2   7  12  13  29  19  22   4   2  15   3  11 313
    4  10]
 [ 13  13  23   9   7   9  12  28  10  63   3  13  13  12  25   3   1   9
  171  63]
 [ 12   6  10  10   4   6  15  34   9  46  17  18  14  17  16   5   8   6
   48 199]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:1, Pool Blocks:2, Dense Layers:2)",483.1262755393982,0.432,0.432,0.432,0.432,0.432,"[[199  45   0   3   2  12   3  12  31  17  14  24  17  16  12  25  40  11
    1  16]
 [ 58 210  26   9  10   4   9  16  11  12  18  12  16  10  28   6  26   1
    6  12]
 [  3  14 341   8  33   5   3  19  10   2   2   0   5  13  22   2   7   6
    2   3]
 [ 10  14  14 227  24  37  30   8  12   9   5  12   3  13  31   5  21   4
    8  13]
 [  6  21  86  13 242   1   7  19  18   0   4  10   7  11  26   3  17   4
    1   4]
 [ 21   9  14  54  14 186  36  13  13  12  17   8   6   6  37   4  12   2
   12  24]
 [ 10  11   5  23   9  33 248   4   8  16  12   9   2   4  36   7  18   8
   22  15]
 [ 17  12  35   6  11   4   4 222  23   2   3  17  15  27  19  30  26  11
    5  11]
 [ 36   5   5   5   5   7   3  17 192   6   0  52  33  12  33  15  46  11
   10   7]
 [ 17   8   1   3   0   6  18   0   7 285  63  14   3   0   6   2   5  22
   13  27]
 [ 27  20   5   1   4   4   8   2  10  38 324  11   1   1   4   1   7  24
    0   8]
 [ 31   8   4  11   7  11  10  11  66  29   7 145  34   9  26  18  35  13
    5  20]
 [ 32  15   4  11   5   3   5  21  72   5   3  47 120  14  40  18  58   2
   11  14]
 [ 38  33  26  15  19   9   7  45  39   8  11  19  18  87  31  27  44   7
    8   9]
 [ 11  13  21  13  19  10  13  15  21   8   1  12   5   9 275   0  28   4
   11  11]
 [ 59  53   4   4   5  14   7  41  41   9   5  25  36  23  16  87  37   9
   10  15]
 [ 46  21  13  13  10   3  10  24  55   9   6  18  36  14  38  13 158   8
    3   2]
 [ 13   9   7   2   2   3   2   8   8  26  23   7   3   4   5   8  10 353
    1   6]
 [ 13   8   6   3   8  19   8  14  16  53   8  15  16   4  27   8   6  10
  180  78]
 [ 16   5   4   5   2  12  17  12   9  44  16  25  12   4  13   9   5  13
   38 239]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:1, Pool Blocks:2, Dense Layers:2)",205.00391554832458,0.5001,0.5001,0.5001,0.5001,0.5001,"[[232  31   0   1   3   9   4  13  23   9  10  22  30  13   6  28  44   4
    5  13]
 [ 63 221  16   6   9   5   6   6  11   7  12  12  12  22  17  22  27   5
   10  11]
 [  0  15 341  11  26   4   9  25   5   0   3   2   1  15  13   4   7   5
    5   9]
 [  6  11   8 267  24  41  22   9   9   5   3   1   3  13  26   3  18   1
   12  18]
 [  2  10  45  10 269   6  11  30  26   1   3   8   4  15  14   7  19   7
    2  11]
 [ 10   9   8  42   9 215  46   6  14  12  12   5  12   9  27  12  13   3
   15  21]
 [  5   9   2  19  12  32 283   2   8  12  13   9   2   6  29   3  18   3
   13  20]
 [ 16  10  26   5   6   4   5 238  22   1   4  12  14  38  11  39  19  10
    8  12]
 [ 32   7   2   2   5   8   6  14 203   5   2  49  37  17  16  18  55   8
    6   8]
 [ 14   7   1   2   0   4   8   1   6 334  31  11   4   8   9   4   6   7
   14  29]
 [ 17  12   2   3   3   8   8   2   5  36 342   4   3   3   3   6  11  16
    4  12]
 [ 23   5   2   5   5   6   5  18  56  16   4 196  32  11  28  14  39   9
   11  15]
 [ 32   6   3   2   5   5   7  12  75   1   2  29 158  17  19  22  76   4
    8  17]
 [ 23  26  17  20   9  11   8  44  30   3   2  18  15 137  28  36  33   5
   18  17]
 [  8   9  10   9  10   9  25  11  16   4   0  12   8  15 289   6  37   0
   14   8]
 [ 49  19   3   6   3  10   7  28  33   5   8  17  33  37  14 149  43   9
    9  18]
 [ 25  15   3   5   7   6   8  10  42   5   0  26  44  19  33  24 217   1
    5   5]
 [ 13   6   1   1   4   2   2   4  12  25  14   5   2   6   2  12   6 369
    3  11]
 [ 13   6   3   4   0   8  14   8   4  25  11   7   6   9   7   4   5   9
  268  89]
 [ 14   4   5   6   3  12   7  11   7  29   8   8  11  21   3   9   3   6
   60 273]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:2, Pool Blocks:2, Dense Layers:2)",522.5625810623169,0.3594,0.3594,0.3594,0.3594,0.3594,"[[180  43   1  11   1   8  10  23  20  21  20  33  14   6  16  11  37  10
   12  23]
 [ 55 166  24  17  13   6  17  24   3  14  18  13  23   1  29   0  35  10
   16  16]
 [  3  10 305  16  40   2  10  25  13   2   2   3   9   2  29   1   9   1
   14   4]
 [  6   6  11 248  23  37  33  16  11   5   4   8   6   0  37   0  14   2
   11  22]
 [  2   4 108  20 201   2  16  33  17   2   3  20  11   1  30   2  12   3
   10   3]
 [ 20  10  14  99   5 111  40  15  11  13  13  11  13   2  45   4  11   3
   33  27]
 [  6  15   5  38  21  27 182  22   5  24   8  12  10   0  45   2  30   7
   22  19]
 [ 13  17  35  18   9   5  15 234  16   1   2  15  14   9  32   6  29   3
    4  23]
 [ 28   8   5  14   6  10  13  28 121   6   1  56  44   1  53   6  57   9
   22  12]
 [ 29   6   0   7   0   4  11   0   4 242  66  13   3   1  24   0   5  27
   22  36]
 [ 33  23   2   3   5   8  11   7   5  67 266   5   7   1   4   1  17  17
    4  14]
 [ 36  11   6  13   5  11  10  42  44  35   4  85  32   1  46   8  45  18
   14  34]
 [ 24  14  12  19   2  10  14  28  49  12   0  36  95   8  45  16  61   4
   33  18]
 [ 30  31  29  32  15  13  26  81  24  10  10  10  38  26  43   5  31   2
   23  21]
 [ 11   5  18  30  10   9  34  19  20   9   1   9  11   2 261   1  18   0
   13  19]
 [ 47  27   9  18   1  12  16  69  25  14   5  16  53   5  27  26  47  12
   37  34]
 [ 35  24   6  28  10   8  28  48  30  10   2  28  46   2  38   3 117  15
    8  14]
 [ 21   7   9   3   6   5   8   5   6  50  11  10   5   1   7   2  15 309
    1  19]
 [ 18   8  10   4   1  15  18  14   6  51   9  14  15   0  22   2   6   2
  208  77]
 [ 13  12   2  17   2  12  12  18   7  40  15  20  14   0  17   2   7  13
   66 211]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:2, Pool Blocks:2, Dense Layers:2)",348.182936668396,0.4415,0.4415,0.4415,0.4415,0.4415,"[[185  45   2   3   2   7   9  13  39  13  17  39  21   6  14  24  37   8
    5  11]
 [ 62 184  24   9  10  10  16  17  10  15  13  16  10  11  25  17  29   3
    9  10]
 [  2  15 339   9  30   8  14  18   6   0   3   4   3   7  15   1   7   5
    9   5]
 [  5  11  15 272  20  39  28   8   7   3   6   9   4   5  25   3  12   1
   14  13]
 [  1  13  80  17 229   5  20  21  29   1   1  18   5   9  22   5   8   3
    8   5]
 [ 21  10  14  81   4 142  43   6  17   9  10   9   2  12  41  17  14   2
   21  25]
 [  6  15   7  18  13  27 246  10   4  10  17  10   4   8  35  11  25   3
   13  18]
 [ 13  11  25   9   8   2   8 247  26   5   5  17  14  25  13  27  20   8
    2  15]
 [ 22   4   4   6   4   5   4  13 217   5   5  88  28   9  20  18  34   7
    4   3]
 [ 22  10   0   3   0   2  13   0   6 279  53  19   6   1  10   1   5  20
   25  25]
 [ 19  12   8   3   2   3   6   1   8  45 328  12   1   2   3   7  13  15
    1  11]
 [ 18   8   4  10   7   5  13  29  62  22   5 164  28   5  29  22  29   9
   15  16]
 [ 13   7   5   9   4  10  14  22  84   5   2  62 133   9  22  22  53   2
   12  10]
 [ 34  18  17  32  18   6  15  52  38   1  11  24  29  84  22  30  32  11
   14  12]
 [  8  16  21   9   9  17  27  13  23   5   3  13  11   4 273   4  22   3
    8  11]
 [ 45  30   3  11   7   8  10  44  45   7  10  35  22  22  16 105  23  14
   23  20]
 [ 24  17   7  13   2   4  24  25  51  10   7  53  33  10  47  19 142   4
    4   4]
 [  8   8   2   3   1   3   3   7  17  25  25   9   0   4   3   6   5 355
    6  10]
 [ 12  10   9   9   3  15   8   5  13  40   2  17   6   1  13  14   3   4
  266  50]
 [ 15   7   7   9   1   9  10  16  15  26  18  23  10   5   9  12   4  14
   65 225]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:2, Pool Blocks:2, Dense Layers:2)",296.7708685398102,0.5145,0.5145,0.5145,0.5145,0.5145,"[[215  52   0   2   0   9   1  15  32   2   8  23  31  12  20  26  35   4
    4   9]
 [ 44 247  20   5  10   3   6  10  13   5  12   4  15  11  27  26  27   0
    7   8]
 [  0  12 375   1  25   8   3  15   4   1   2   1   2  11  13   5   7   6
    5   4]
 [  4  10   7 293  18  48  16   4   9   4   4   3   3  13  27   6   9   0
   11  11]
 [  3  10  77  14 272   2   0  20  18   1   3   8   6  12  15  12  14   5
    4   4]
 [ 10  15   8  31   4 250  38  12  14  12   8   6  10  13  27   4   8   2
   15  13]
 [  6  19   7  17   6  26 299   8   5  14  10   9   0   6  28   6   6   2
    7  19]
 [ 13   7  31   9   7   7   2 270  23   2   2  10  14  33  15  24  17   4
    3   7]
 [ 32   4   3   1   5   8   1  14 185   6   3  44  65  20  27  24  43   6
    6   3]
 [ 11   5   1   4   1   8  13   1   7 320  27  26   2   2   2   4   1  10
   17  38]
 [ 21  25   5   2   1  10   2   1   6  31 332   7   6   2   3   6   8  19
    3  10]
 [ 17   5   2   4   2   6   2  17  64  14   1 208  35  10  40  20  33   3
    5  12]
 [ 30  10   6   5   5   4   3  15  81   3   1  43 150  15  33  20  59   1
    5  11]
 [ 29  30  19  15  16  14   3  52  19   1   6  10  16 140  30  44  33   8
   11   4]
 [  7   9  15  11  11  14  11   7  16   2   1  20  14  12 306   6  27   0
    6   5]
 [ 51  31   7   2   4  12   6  40  31   4   8  14  35  34  16 133  32  10
   19  11]
 [ 26  18  10   5   5  11   7  16  53   2   2  22  37  26  34  25 188   5
    3   5]
 [  3   7   4   2   4   4   0   8   6  19  16   6   5   1   2   6   5 390
    1  11]
 [ 11   9   4   6   2  11   6  12   6  20   7  10   6   3   7  11   4   5
  289  71]
 [  7  12   2   5   2   9   7  16  10  27   4  10  12   6   7   8   4  10
   59 283]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:3, Pool Blocks:2, Dense Layers:2)",898.9937162399292,0.3524,0.3524,0.3524,0.3524,0.3524,"[[147  53   6   6   2  10   8  32  35  17  19  16  25  12  29  14  40  11
    9   9]
 [ 41 190  35   8   7   6   9  22  16  11  21   5  27   6  32   8  35   7
    6   8]
 [  2  13 268   8  24   4   5  33  23   3   4   1  17   4  71   2  10   1
    2   5]
 [  6  12  10 206  18  36  44  18  13  11   8  12   7   3  61   2   8   0
    8  17]
 [  2  13 111  18 174   2  12  32  29   3   1   5  16   3  48   1  16   3
    4   7]
 [ 20  14  10  62  10 136  71  29   6  17   9   7   6   1  65   2   9   1
   14  11]
 [  3   4   4  21  18  29 257  15   4  22  16   7   5   1  55   0  12   1
   14  12]
 [ 13  13  30   8   9  11   8 216  45   2   2  10  28  14  32  15  24   1
    8  11]
 [ 24   7  24   9   5   5   6  43 138   5   1  37  52   4  62   9  34  13
   16   6]
 [ 10  17   2   6   2   8  18   1   2 262  63   7   2   2  20   3   5  14
   30  26]
 [ 18  23   5   1   2   3  23   1  10  47 299  12   7   0   7   2  15  12
    4   9]
 [ 22   3  10   9   4   9   8  33  51  21   8  86  44  11  54  10  38  31
   19  29]
 [ 14  20  15   9   3   5   1  33  80   6   2  32  95  11  56  19  63   6
   21   9]
 [ 33  20  39  18   9  17  11  80  36   5  10  12  37  39  47  19  44   3
   10  11]
 [  7   5  36  24  21   5  15  27  24   7   3  14   7   2 255   1  21   8
   11   7]
 [ 43  32   6   4   3   9   6  96  43   9   1  26  53  13  33  36  41  10
   25  11]
 [ 22  25  21  18  11   4  15  38  48   8   6  20  36  14  78  12 110   9
    2   3]
 [ 17   8  12   5   4   3   5  12  21  35  16  15  10   0  21   4  14 281
    5  12]
 [  5   5   8   2   0  14  23  23  16  73  14  15   9   2  39   3   1   5
  182  61]
 [ 15   8   5   6   2  16  21  21   8  65  30  18  12   4  32   4   8  12
   66 147]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",177.86043190956116,0.2554,0.2554,0.2554,0.2554,0.2554,"[[55  6  0 ...  0  1  0]
 [ 0 30  1 ...  2  1  0]
 [ 1  0 20 ...  5  3  1]
 ...
 [ 0  0  3 ... 26  2  0]
 [ 0  0  9 ...  2 10  0]
 [ 0  0  1 ...  3  0  8]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",349.8339910507202,0.331,0.331,0.331,0.331,0.331,"[[61  5  1 ...  0  1  0]
 [ 0 50  1 ...  1  0  0]
 [ 0  0 34 ...  1  3  1]
 ...
 [ 0  0  0 ... 45  0  0]
 [ 1  0 10 ...  0  8  1]
 [ 0  1  3 ...  1  0 25]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",244.1282000541687,0.3792,0.3792,0.3792,0.3792,0.3792,"[[65  2  1 ...  0  0  0]
 [ 0 54  3 ...  0  1  0]
 [ 2  1 38 ...  1  2  0]
 ...
 [ 0  0  0 ... 40  0  0]
 [ 1  0  9 ...  1 16  0]
 [ 0  1  1 ...  1  0 36]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",384.3157694339752,0.2536,0.2536,0.2536,0.2536,0.2536,"[[56  2  1 ...  0  1  0]
 [ 0 38  1 ...  0  1  2]
 [ 0  1 15 ...  7  5  0]
 ...
 [ 0  1  0 ... 35  0  0]
 [ 0  0  6 ...  2 11  0]
 [ 0  2  2 ...  2  1 17]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",149.22074460983276,0.3093,0.3093,0.3093,0.3093,0.3093,"[[61  3  1 ...  0  2  0]
 [ 0 47  1 ...  2  2  0]
 [ 1  1 29 ...  1  7  1]
 ...
 [ 0  0  2 ... 50  2  0]
 [ 3  0  9 ...  4 14  0]
 [ 0  1  1 ...  0  0 16]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",121.36706185340881,0.3655,0.3655,0.3655,0.3655,0.3655,"[[63  4  0 ...  0  0  0]
 [ 0 50  3 ...  1  1  0]
 [ 2  0 32 ...  2  8  0]
 ...
 [ 0  0  0 ... 40  2  1]
 [ 1  0  8 ...  0 24  1]
 [ 1  0  1 ...  0  0 24]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",243.67512106895447,0.2494,0.2494,0.2494,0.2494,0.2494,"[[62  2  2 ...  0  1  0]
 [ 1 33  4 ...  0  0  0]
 [ 1  0 18 ...  4  3  0]
 ...
 [ 0  1  1 ... 27  1  1]
 [ 1  1  6 ...  4  9  1]
 [ 0  2  2 ...  0  1 11]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",97.64707159996033,0.3062,0.3062,0.3062,0.3062,0.3062,"[[62  3  2 ...  0  2  0]
 [ 0 42  2 ...  2  1  0]
 [ 1  1 30 ...  1  3  0]
 ...
 [ 0  0  4 ... 28  3  0]
 [ 0  0  9 ...  1 13  0]
 [ 0  0  2 ...  0  1 21]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",359.71803879737854,0.3714,0.3714,0.3714,0.3714,0.3714,"[[70  3  2 ...  0  0  0]
 [ 1 50  0 ...  0  1  0]
 [ 0  2 32 ...  2  8  0]
 ...
 [ 0  0  2 ... 37  1  0]
 [ 1  0  4 ...  1 22  0]
 [ 1  1  1 ...  0  1 23]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:1, Pool Blocks:2, Dense Layers:2)",575.0538754463196,0.2496,0.2496,0.2496,0.2496,0.2496,"[[47  8  1 ...  0  1  0]
 [ 0 41  1 ...  1  0  0]
 [ 3  5 19 ...  4  2  0]
 ...
 [ 0  2  5 ... 35  2  0]
 [ 0  2 11 ...  3 11  1]
 [ 0  1  1 ...  0  1  8]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:1, Pool Blocks:2, Dense Layers:2)",396.73852252960205,0.3246,0.3246,0.3246,0.3246,0.3246,"[[69  3  2 ...  0  0  0]
 [ 0 48  0 ...  0  0  0]
 [ 1  0 23 ...  1  7  0]
 ...
 [ 0  0  2 ... 35  0  1]
 [ 2  0  6 ...  1 14  1]
 [ 0  0  1 ...  2  1 14]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:1, Pool Blocks:2, Dense Layers:2)",200.908287525177,0.3894,0.3894,0.3894,0.3894,0.3894,"[[73  3  0 ...  0  1  0]
 [ 1 51  0 ...  1  0  0]
 [ 0  2 30 ...  2  7  0]
 ...
 [ 0  0  1 ... 44  0  0]
 [ 2  0  9 ...  1 13  0]
 [ 0  0  1 ...  1  0 23]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:2, Pool Blocks:2, Dense Layers:2)",667.0538210868835,0.2672,0.2672,0.2672,0.2672,0.2672,"[[60  4  0 ...  0  2  0]
 [ 0 42  2 ...  4  0  0]
 [ 3  4 21 ...  3  4  0]
 ...
 [ 0  2  0 ... 34  1  0]
 [ 2  0  4 ...  3 16  0]
 [ 0  2  6 ...  1  0  2]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:2, Pool Blocks:2, Dense Layers:2)",402.8334393501282,0.3269,0.3269,0.3269,0.3269,0.3269,"[[60  2  0 ...  0  0  1]
 [ 0 50  0 ...  1  0  0]
 [ 0  2 15 ...  5  6  0]
 ...
 [ 0  0  0 ... 43  0  0]
 [ 1  2  4 ...  4  9  0]
 [ 0  1  1 ...  0  1 12]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:2, Pool Blocks:2, Dense Layers:2)",341.97141289711,0.4123,0.4123,0.4123,0.4123,0.4123,"[[70  3  0 ...  0  1  1]
 [ 0 51  0 ...  0  1  1]
 [ 1  0 32 ...  2  3  0]
 ...
 [ 0  0  2 ... 45  0  0]
 [ 0  0  8 ...  0 17  1]
 [ 1  0  1 ...  0  0 31]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 2, Conv Layers Per Block:3, Pool Blocks:2, Dense Layers:2)",939.498064994812,0.2591,0.2591,0.2591,0.2591,0.2591,"[[58  0  0 ...  0  0  0]
 [ 0 34  1 ...  3  2  0]
 [ 3  3 14 ...  1  7  0]
 ...
 [ 0  0  0 ... 23  4  0]
 [ 2  0  2 ...  2 26  0]
 [ 0  0  3 ...  4  0  8]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 4, Conv Layers Per Block:3, Pool Blocks:2, Dense Layers:2)",499.58522748947144,0.3341,0.3341,0.3341,0.3341,0.3341,"[[67  0  1 ...  0  0  0]
 [ 0 39  1 ...  2  0  1]
 [ 0  3 18 ...  0  4  0]
 ...
 [ 0  0  0 ... 39  0  1]
 [ 0  0  7 ...  2 11  1]
 [ 0  0  1 ...  0  2 15]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 8, Conv Layers Per Block:3, Pool Blocks:2, Dense Layers:2)",907.6735644340515,0.4058,0.4058,0.4058,0.4058,0.4058,"[[63  6  1 ...  0  0  0]
 [ 0 56  1 ...  0  0  0]
 [ 1  2 31 ...  0  3  0]
 ...
 [ 0  2  0 ... 38  1  0]
 [ 0  0  6 ...  1 18  1]
 [ 1  2  1 ...  0  0 36]]"
fine,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 32, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",3472.5496776103973,0.4032,0.4032,0.4032,0.4032,0.4032,"[[66  3  3 ...  0  0  0]
 [ 1 54  1 ...  0  0  1]
 [ 0  2 43 ...  1  1  0]
 ...
 [ 0  0  4 ... 37  0  0]
 [ 1  0 13 ...  0 19  1]
 [ 0  0  3 ...  0  0 29]]"
coarse,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 32, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",1639.9402236938477,0.5265,0.5265,0.5265,0.5265,0.5265,"[[233  33   0   4   3   7   4   6  17   5   8  23  23   5  16  43  44   2
    7  17]
 [ 54 233  17   7   7  11   2   7   7   7   6  14  16   7  26  38  20   3
   11   7]
 [  2   9 367   9  30   2   6  18   6   2   2   0   2  14  13   7   4   2
    3   2]
 [  8   6   6 297  12  48  12   4   6   9   2   4   5   9  32   6  10   0
   14  10]
 [  8  15  56  12 283   6   3  20  11   2   0  12  10  11  22   6  14   4
    2   3]
 [  9  14   9  50   5 234  38   5  13  13   2   4   5  11  33  18   6   3
   12  16]
 [  7  19   7  20   6  37 272   4  10  14   7  10   3   6  32   4  14   4
   10  14]
 [ 10  14  27   9  10   3   5 256  23   2   1   7  15  28  15  32  25   4
    4  10]
 [ 39   2   2   7   3   7   4  12 201  10   6  57  49   9  22  22  36   3
    6   3]
 [ 11   7   0   0   1   7   8   0   5 333  19  23   4   3  17   4   9   7
   15  27]
 [ 15  14   3   4   1  12  12   3   6  55 291  10   7   3   4  12  16  15
    4  13]
 [ 27   3   2   3   4   7   3  11  36  21   3 226  30   8  29  19  44   7
    5  12]
 [ 35  13   4   2   2   5   2  17  59   2   0  39 202   9  29  16  54   0
    5   5]
 [ 29  26  10  21  11  10   8  35  26   5   4  14  16 161  37  39  30   2
    8   8]
 [ 12   9  10  10   3  15   2   8   5   9   0  10  10  10 342   5  26   0
    4  10]
 [ 39  41   4   4   7  11   6  24  20  10   1  29  38  26  14 169  26   4
   16  11]
 [ 38  16   8  10   9   9   6  18  21   4   1  21  32  13  53  22 211   2
    2   4]
 [ 12   3   4   1   4   3   1   5   6  21   7  11   3   6   4   9   9 380
    3   8]
 [  3  11   6   3   4   8   5   9   6  27   3  15   5   7  16   6   6   5
  291  64]
 [  7   9   3  10   8  10   5   9   9  31   3  12  12   3   7  13   5   2
   59 283]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 16, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",783.6919846534729,0.7007,0.7007,0.7007,0.7007,0.7007,"[[735  14  65  36  22   9  14  17  46  42]
 [ 17 799   8  25   2   7   7   8  26 101]
 [ 58   3 563  73 113  70  66  42   6   6]
 [ 22   9  60 561  59 181  53  37   6  12]
 [ 13   2  66  78 690  46  43  50   9   3]
 [ 15   3  48 164  59 628  21  53   1   8]
 [  7   3  38  78  71  31 755   5   4   8]
 [ 17   2  31  55  55  62   4 765   1   8]
 [ 75  34  20  31  15  12   5   9 750  49]
 [ 37  83   6  39  13  10   7  27  17 761]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 32, Conv Layers Per Block:1, Pool Blocks:1, Dense Layers:2)",3102.3215515613556,0.7045,0.7045,0.7045,0.7045,0.7045,"[[739  21  63  28  26  22  11  16  42  32]
 [ 27 807  10  21   5   8   8   4  23  87]
 [ 58   3 545  75 115  91  74  33   3   3]
 [ 18   6  55 552  59 206  58  27  12   7]
 [ 17   5  54  79 681  51  53  52   7   1]
 [ 14   3  40 173  50 648  18  46   3   5]
 [  6   6  29  81  48  39 781   6   2   2]
 [ 14   0  25  52  63  78   8 756   0   4]
 [ 71  32  23  29   7  14   7   8 768  41]
 [ 40  74   8  30   9  19   4  27  21 768]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 16, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",551.7356879711151,0.7243,0.7243,0.7243,0.7243,0.7243,"[[755  13  74  34  28  10   7  10  34  35]
 [ 22 780   6  22   8   5  14   6  23 114]
 [ 52   2 604  53 111  81  57  33   2   5]
 [ 17   6  61 546  76 200  49  33   7   5]
 [ 11   3  49  68 748  39  41  36   4   1]
 [  9   2  40 151  59 678  13  44   2   2]
 [  6   2  36 101  56  40 753   4   0   2]
 [ 10   0  33  32  49  71   1 794   1   9]
 [ 67  32  21  36  13  12   7   4 770  38]
 [ 27  58   6  26  12   9   9  28  10 815]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 32, Conv Layers Per Block:2, Pool Blocks:1, Dense Layers:2)",1897.61585354805,0.7457,0.7457,0.7457,0.7457,0.7457,"[[769  12  56  26  19  13  10  17  47  31]
 [ 19 834  10  14   4   4   9   4  16  86]
 [ 48   2 599  72  92  69  63  48   4   3]
 [ 20   5  41 583  66 192  48  38   3   4]
 [ 12   1  40  70 735  30  40  67   3   2]
 [  9   2  35 149  48 697  14  44   1   1]
 [ 10   2  31  64  56  34 793   7   2   1]
 [ 13   2  22  30  47  76   7 799   2   2]
 [ 64  30   8  21  15  10   8   8 801  35]
 [ 27  53   6  16   8   3   6  20  14 847]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 16, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",728.4422578811646,0.7344,0.7344,0.7344,0.7344,0.7344,"[[747  10  65  46  24   9   9  17  35  38]
 [ 15 827  11  16  10   5   9   3  24  80]
 [ 56   2 588  86 102  68  55  34   4   5]
 [ 18   6  56 582  67 177  44  38   6   6]
 [ 13   2  52  74 741  38  31  47   2   0]
 [  8   3  34 150  46 691  15  49   0   4]
 [  4   1  45  80  51  40 772   6   1   0]
 [  5   3  20  51  54  61   0 803   0   3]
 [ 67  39  24  22  14  15   4   5 775  35]
 [ 33  49   7  22   8   8   3  34  18 818]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 32, Conv Layers Per Block:3, Pool Blocks:1, Dense Layers:2)",2605.2812564373016,0.755,0.755,0.755,0.755,0.755,"[[802   9  50  20  25  13   6  17  30  28]
 [ 21 847   5  14   4   1  11   3  15  79]
 [ 45   3 622  60 105  69  56  35   2   3]
 [ 14   4  54 613  64 170  44  17   8  12]
 [  5   5  42  57 772  37  28  47   4   3]
 [  9   3  43 171  43 684  13  32   0   2]
 [  8   1  37  72  51  32 793   2   3   1]
 [  7   3  22  43  59  75   0 783   1   7]
 [ 63  30  21  14  23  12   7   6 794  30]
 [ 28  57   8  13   6   8   8  16  16 840]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 16, Conv Layers Per Block:1, Pool Blocks:2, Dense Layers:2)",235.88738346099854,0.747,0.747,0.747,0.747,0.747,"[[791   5  65  23  19   4   7  16  43  27]
 [ 18 816   9  24   2   4   9   7  28  83]
 [ 45   0 633  64  93  65  50  35   9   6]
 [ 18   4  61 605  59 159  52  34   5   3]
 [ 11   3  55  70 739  29  37  44  11   1]
 [ 14   1  36 187  41 647  25  45   1   3]
 [  6   3  43  60  33  25 826   2   1   1]
 [  6   2  22  50  59  46  12 797   1   5]
 [ 62  24  28  22   7  12  10   8 801  26]
 [ 27  66  12  19   8   6   2  23  22 815]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 32, Conv Layers Per Block:1, Pool Blocks:2, Dense Layers:2)",324.4239203929901,0.761,0.761,0.761,0.761,0.761,"[[769   9  69  28  22   9   7  11  42  34]
 [ 21 817  11  19   5   5  11   5  24  82]
 [ 33   1 684  62  85  43  50  30   7   5]
 [ 16   6  66 629  56 144  41  30   5   7]
 [  6   2  49  71 774  23  41  30   3   1]
 [  9   0  35 200  52 642  18  39   2   3]
 [  3   0  38  78  37  17 818   4   3   2]
 [  5   2  27  34  64  39   6 819   1   3]
 [ 40  18  16  28  10   9   9   9 837  24]
 [ 25  42   7  38   8   7   7  26  19 821]]"
cifar10,0,0,0,0,EasyConvNet,"EasyConvNet(Dimensions:2, Channels Per Layer: 16, Conv Layers Per Block:2, Pool Blocks:2, Dense Layers:2)",375.9310677051544,0.7624,0.7624,0.7624,0.7624,0.7624,"[[792   6  58  26  23   4  12  18  39  22]
 [ 25 829  18  12   5   2  12   4  26  67]
 [ 49   1 664  54  88  61  45  31   6   1]
 [ 13   2  51 589  75 172  54  32   9   3]
 [ 13   2  56  47 768  26  40  38   9   1]
 [ 10   0  38 168  50 677  18  35   1   3]
 [  3   0  50  46  39  21 832   5   4   0]
 [ 14   0  30  33  57  53   5 803   3   2]
 [ 56  16  17  14  13   8  10   1 847  18]
 [ 36  43   9  21   6   4  13  27  18 823]]"
